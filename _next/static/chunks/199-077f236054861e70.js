(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[199],{4199:(t,e,o)=>{Promise.resolve().then(o.bind(o,9710)),Promise.resolve().then(o.bind(o,5031)),Promise.resolve().then(o.bind(o,2835)),Promise.resolve().then(o.bind(o,5183)),Promise.resolve().then(o.bind(o,4783)),Promise.resolve().then(o.bind(o,3134)),Promise.resolve().then(o.bind(o,9180)),Promise.resolve().then(o.bind(o,879)),Promise.resolve().then(o.bind(o,266)),Promise.resolve().then(o.t.bind(o,8173,23)),Promise.resolve().then(o.t.bind(o,7970,23)),Promise.resolve().then(o.bind(o,2654)),Promise.resolve().then(o.bind(o,6203))},2654:(t,e,o)=>{"use strict";o.d(e,{default:()=>d});var i=o(5155),n=o(2115),a=o(4920),r=o(3463),s=o(9795);function l(){for(var t=arguments.length,e=Array(t),o=0;o<t;o++)e[o]=arguments[o];return(0,s.QP)((0,r.$)(e))}let c=n.forwardRef((t,e)=>{let{className:o,...n}=t;return(0,i.jsx)(a.bL,{ref:e,className:l("relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full",o),...n})});c.displayName=a.bL.displayName;let g=n.forwardRef((t,e)=>{let{className:o,...n}=t;return(0,i.jsx)(a._V,{ref:e,className:l("aspect-square h-full w-full object-cover",o),...n})});g.displayName=a._V.displayName;let p=n.forwardRef((t,e)=>{let{className:o,...n}=t;return(0,i.jsx)(a.H4,{ref:e,className:l("flex h-full w-full items-center justify-center rounded-full bg-muted",o),...n})});p.displayName=a.H4.displayName;var h=o(2317);let u=(0,o(1027).F)("inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",{variants:{variant:{default:"bg-primary text-primary-foreground shadow hover:bg-primary/90",destructive:"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90",outline:"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground",secondary:"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80",ghost:"hover:bg-accent hover:text-accent-foreground",link:"text-primary underline-offset-4 hover:underline"},size:{default:"h-9 px-4 py-2",sm:"h-8 rounded-md px-3 text-xs",lg:"h-10 rounded-md px-8",icon:"h-9 w-9"}},defaultVariants:{variant:"default",size:"default"}}),E=n.forwardRef((t,e)=>{let{className:o,variant:n,size:a,asChild:r=!1,...s}=t,c=r?h.DX:"button";return(0,i.jsx)(c,{className:l(u({variant:n,size:a,className:o})),ref:e,...s})});E.displayName="Button";var m=o(7686);function d(t){let{name:e}=t,o=m.A;if(!o[e])return(0,i.jsx)(c,{children:(0,i.jsx)(p,{children:e.charAt(0)})});let n=o[e];return n?(0,i.jsxs)("div",{className:"flex items-center gap-4",children:[(0,i.jsxs)(c,{className:"w-12 h-12",children:[(0,i.jsx)(g,{src:n.image_url,alt:n.name}),(0,i.jsx)(p,{children:n.name.charAt(0)})]}),(0,i.jsxs)("div",{children:[(0,i.jsx)("h3",{className:"font-medium text-sm",children:n.name}),(0,i.jsx)("p",{className:"text-xs text-gray-500",children:n.title}),n.socials&&(0,i.jsxs)("div",{className:"flex gap-1",children:[n.socials.github&&(0,i.jsx)(E,{variant:"link",asChild:!0,className:"p-1 text-xs",children:(0,i.jsx)("a",{href:"https://github.com/".concat(n.socials.github),target:"_blank",rel:"noopener noreferrer",children:"GitHub"})}),n.socials.linkedin&&(0,i.jsx)(E,{variant:"link",asChild:!0,className:"p-1 text-xs",children:(0,i.jsx)("a",{href:"https://linkedin.com/in/".concat(n.socials.linkedin),target:"_blank",rel:"noopener noreferrer",children:"LinkedIn"})}),n.socials.blog&&(0,i.jsx)(E,{variant:"link",asChild:!0,className:"p-1 text-xs",children:(0,i.jsx)("a",{href:n.socials.blog,target:"_blank",rel:"noopener noreferrer",children:"Blog"})})]})]})]}):(0,i.jsx)(c,{children:(0,i.jsx)(p,{children:e.charAt(0)})})}},6203:(t,e,o)=>{"use strict";o.d(e,{Curation:()=>g});var i=o(5155),n=o(2115);let a={"10th":{"1st":{PMPO:[{제목:"끝맺음을 잘하자 (글또 다짐)",작가:"임지환",주소:"https://habwa.tistory.com/entry/%EB%81%9D%EB%A7%BA%EC%9D%8C%EC%9D%84-%EC%9E%98%ED%95%98%EC%9E%90-%EA%B8%80%EB%98%90-%EB%8B%A4%EC%A7%90",설명:"\uD83D\uDE80 끝맺음의 중요성을 강조하며, 대목표와 소목표 설정, 수치화, 그리고 커뮤니티와 함께 성장하는 전략적인 자기계발 접근법을 제시합니다."},{제목:"침대 위에서 눈물을 훔치며 본 내동생 결혼식",작가:"신지혜",주소:"https://brunch.co.kr/@smol/13",설명:"\uD83D\uDC70 언택트 시대의 혁신적인 결혼식 경험을 UX 관점에서 생생하게 풀어낸 감동적이고 실용적인 온라인 결혼식 이야기!"}],Frontend:[{제목:"당근 테크밋업 발표를 하고 (발표를 앞둔 모든 분께)",작가:"정현수",주소:"https://junghyeonsu.com/posts/daangn-tech-meetup-retrospect/",설명:"\uD83C\uDFA4 발표 준비부터 실전까지의 상세한 노하우를 담은 실용적인 글로, 발표를 앞둔 사람들에게 장표 제작, 발표 기법, 마인드셋까지 종합적인 인사이트를 제공합니다."},{제목:"Web Workers, AI 모델을 브라우저의 백그라운드에서 실행하면 앱 성능이 좋아질까?",주소:"https://pkw-may.tistory.com/65",작가:"박경원",설명:"\uD83D\uDE80 AI 모델의 백그라운드 실행의 장단점을 실험적으로 탐구하며, 실시간 이미지 추론에서는 메인 스레드가 더 효율적일 수 있음을 깨달은 인사이트 있는 글입니다."},{제목:"함수는 어디까지 접근 가능한가? - Closure와 this 이해하기",주소:"https://www.oooooroblog.com/posts/90-js-this-closure",작가:"조예진",설명:"\uD83E\uDDE0 자바스크립트의 스코프, 클로저, this의 동작 원리를 깊이 있게 이해할 수 있는 심도 있는 기술 블로그 포스트로, 개발자의 JavaScript 기본기를 탄탄하게 다질 수 있는 글입니다."},{제목:"Shadow DOM으로 스타일 충돌 해결하기",주소:"https://kangju.dev/posts/solving-style-conflicts-with-shadow-dom",작가:"강주혁",설명:"\uD83C\uDFA8 웹 컴포넌트의 스타일 격리를 위한 Shadow DOM의 개념과 활용법을 명확하게 설명한 유용한 글입니다."}],Backend:[{제목:"Redis의 Increment는 왜 원자적으로 동작하는 것일까?",주소:"https://strong-park.tistory.com/entry/Redis%EC%9D%98-Increment%EB%8A%94-%EC%99%9C-%EC%9B%90%EC%9E%90%EC%A0%81%EC%9C%BC%EB%A1%9C-%EB%8F%99%EC%9E%91%ED%95%98%EB%8A%94-%EA%B2%83%EC%9D%BC%EA%B9%8C",작가:"박세진a",설명:"\uD83D\uDD0D Redis의 INCR 명령어가 원자적으로 동작하는 원리를 깊이 있게 탐구하여, 동시성 제어의 내부 메커니즘을 명확히 이해할 수 있는 기술 블로그 포스팅입니다."},{제목:"계약에 의한 설계(Design by Contract)를 실전에 적용하기",주소:"https://jinseong-dev.tistory.com/49",작가:"황진성",설명:"\uD83D\uDCDD 계약에 의한 설계(Design by Contract)의 핵심 개념과 실전 적용 방법을 상세히 설명한 유익한 기술 문서입니다."},{제목:"스트림은 느긋하고 싶다",주소:"https://yatta.tistory.com/10",작가:"이종은",설명:"\uD83C\uDFAF Stream의 지연 연산 특성을 이해하고 성능 최적화를 위한 핵심 메커니즘을 학습할 수 있는 깊이 있는 기술 가이드입니다."}],Data:[{제목:"Airflow를 활용해서 API로 데이터 수집하기",주소:"https://velog.io/@chltpdus48/Airflow%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%B4%EC%84%9C-API%EB%A1%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%88%98%EC%A7%91%ED%95%98%EA%B8%B0",작가:"최세연",설명:"\uD83D\uDD04 Airflow를 활용한 API 데이터 수집의 체계적이고 효율적인 접근 방법을 상세히 설명하는 기술 블로그로, 비동기 처리, 세마포어, 오류 관리 등 실무에 바로 적용 가능한 인사이트를 제공합니다."},{제목:"마이크로소프트 연구원이 말하는 AI에 대한 치명적 착각",주소:"https://brunch.co.kr/@hnote/154",작가:"이소희a",설명:"\uD83E\uDD16 AI의 기술적, 사회적 영향을 깊이 있게 탐구하며, 마이크로소프트 연구원의 비판적 시각으로 AI의 숨겨진 위험성과 윤리적 문제를 통찰력 있게 분석한 책입니다."}],Fullstack:[{제목:"소프트웨어 파괴의 미학",주소:"https://kciter.so/posts/the-aesthetics-of-destroying-software/",작가:"이선협",설명:"\uD83C\uDFAF 소프트웨어 개발에서 불가피한 코드 파괴를 받아들이고, 변화에 유연하게 대응할 수 있는 혁신적인 개발 철학을 제시하는 깊이 있는 기술 에세이입니다."},{제목:"사라진 Python 웹 프레임워크의 Redis Cluster 캐시 구현체",주소:"https://medium.com/@sudosubin/%EC%82%AC%EB%9D%BC%EC%A7%84-python-%EC%9B%B9-%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC%EC%9D%98-redis-cluster-%EC%BA%90%EC%8B%9C-%EA%B5%AC%ED%98%84%EC%B2%B4-8439a473e16b",작가:"김수빈",설명:"\uD83D\uDCA1 Redis Cluster 지원이 부족한 Python 웹 프레임워크에서 Django와 FastAPI를 위한 맞춤형 캐시 백엔드를 직접 구현하여 성능과 안정성을 높인 혁신적인 기술 접근 사례"},{제목:"랭체인v0.3 하이퍼클로바x 연동하기",주소:"https://chucoding.tistory.com/149",작가:"서현석",설명:"\uD83D\uDD27 랭체인 v0.3과 하이퍼클로바X를 커스텀 모델로 연동하고, 배치 처리를 통한 성능 개선 사례를 제시하여, AI 개발자들에게 실용적인 가이드를 제공합니다."}]},"2nd":{PMPO:[{제목:"SEO (검색 엔진 최적화) 24년 버전 BERT를 곁들인",주소:"https://habwa.tistory.com/entry/SEO-%EA%B2%80%EC%83%89-%EC%97%94%EC%A7%84-%EC%B5%9C%EC%A0%81%ED%99%94-24%EB%85%84-%EB%B2%84%EC%A0%84BERT%EB%A5%BC-%EA%B3%81%EB%93%A4%EC%9D%B8",설명:"\uD83D\uDD0D SEO의 9가지 핵심 요소를 체계적으로 정리하고 BERT를 고려한 자연스러운 콘텐츠 작성법까지 상세히 설명한 유익한 글로, 웹사이트 최적화를 위한 실용적인 가이드라인을 제공합니다.",작가:"임지환"}],Frontend:[{제목:"모바일에서 연속 입력시 값이 무시되는 이유(feat. click, touch, pointer event)",주소:"https://mong-blog.tistory.com/entry/%EB%AA%A8%EB%B0%94%EC%9D%BC%EC%97%90%EC%84%9C-%EC%97%B0%EC%86%8D-%EC%9E%85%EB%A0%A5%EC%8B%9C-%EA%B0%92%EC%9D%B4-%EB%AC%B4%EC%8B%9C%EB%90%98%EB%8A%94-%EC%9D%B4%EC%9C%A0feat-touch-pointer-event",설명:"\uD83D\uDCF1 모바일 환경에서 이벤트 처리의 미묘한 차이를 이해하고, touchend나 pointerup 같은 대안적 이벤트로 사용자 경험을 개선할 수 있는 통찰력 있는 글!",작가:"금정민"},{제목:"JavaScript에서 이진 데이터 이해하기 - ArrayBuffer, TypedArray, Blob, File",주소:"https://bichoninthefront.vercel.app/2024-jsBinaryDataTypes",설명:"\uD83D\uDCA1 이진 데이터 처리를 위한 JavaScript의 다양한 타입(ArrayBuffer, TypedArray, Blob, File)을 상세히 설명하여 웹 개발자가 파일 처리와 데이터 조작에 필요한 핵심 개념을 이해하기 쉽게 정리한 유용한 글입니다.",작가:"김민지a"}],Backend:[{제목:"팩트체크와 나",주소:"https://proofby.ac/misinformation/",설명:"\uD83D\uDD75️ 정보의 정확성을 위해 끊임없이 오정보와 싸우는 저자의 열정과 노력을 담은 글로, 건전한 지식 생태계를 위한 중요한 메시지를 전달하고 있어 추천합니다.",작가:"박재온"},{제목:"리더가 MSA 전환을 하자고 했다. 그리고 처참히 실패했다.",주소:"https://imksh.com/127#google_vignette",설명:"\uD83E\uDD14 MSA 전환은 기술적 역량과 조직 문화 변화가 필수적이며, 실무진의 기술력과 경영진의 지원, 부서간 협력이 뒷받침되어야 성공할 수 있다는 현실적인 조언을 담은 글입니다.",작가:"강승현"},{제목:"에러 없이 서버가 죽는다고? 병렬 다운로드 환경에서 발생한 장애 대응기",주소:"https://www.uwoobeat.dev/server-crashes-sliently-in-parallel-download",설명:"\uD83D\uDDC2️ 병렬 다운로드 환경의 복잡한 서버 장애 대응 과정을 실무적이고 깊이 있게 다루는 기술 블로그 포스트로, 백엔드 개발자들에게 실질적인 인사이트를 제공합니다.",작가:"안재현"},{제목:"서버리스 환경의 프로젝트는 어떻게 관리해야 될까?",주소:"https://codediary21.tistory.com/155",설명:"\uD83D\uDE80 서버리스 환경의 복잡한 프로젝트 관리를 위한 핵심 전략과 실무 인사이트를 제공하는 유용한 기술 블로그 포스트!",작가:"이용선"},{제목:"C언어에서의 다차원 데이터 메모리 할당 방법",주소:"https://chinensis.tistory.com/entry/C%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9C%EC%9D%98-%EB%8B%A4%EC%B0%A8%EC%9B%90-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%A9%94%EB%AA%A8%EB%A6%AC-%ED%95%A0%EB%8B%B9-%EB%B0%A9%EB%B2%95",설명:"\uD83E\uDDE9 C언어에서 다차원 데이터 메모리 할당, 1차원으로 데이터를 저장하고 인덱스 계산을 통해 접근하는 방식이 가장 효율적이고 성능이 우수합니다.",작가:"이승민b"},{제목:"코드가 깔끔해지는 VO(Value Object)를 써야하는 이유",주소:"https://dongmin-sim.github.io/posts/what-is-vo/",설명:"\uD83D\uDC8A VO(Value Object)는 도메인 개념을 더 명확하게 표현하고 캡슐화를 통해 코드의 신뢰성과 테스트 용이성을 높여주는 불변 객체로, 비즈니스 로직을 더 깔끔하게 구현할 수 있게 해줍니다.",작가:"심동민"},{제목:"WebFlux에서 chunked 스트리밍 request 받기",주소:"https://welcometodannas.tistory.com/91",설명:"\uD83D\uDD04 WebFlux의 chunked 스트리밍 request 처리 방법을 다룬 백엔드 기술 글로, 실시간 데이터 처리가 필요한 개발자에게 유용한 참고 자료가 될 것 같습니다.",작가:"이다은"},{제목:"Python - FastAPI와 Dependency Injector",주소:"https://libertbaek.tistory.com/entry/FastAPI%EC%99%80-Dependency-Injector",설명:"\uD83D\uDEE0️ FastAPI와 Dependency Injector를 활용하여 Python 웹 애플리케이션의 의존성 관리와 테스트 용이성을 개선하는 방법을 상세히 설명한 기술 가이드입니다.",작가:"백승주"}],AIML:[{제목:"Kubernetes - 파드의 리소스 자원 사용량을 제한시켜보자",주소:"https://techblog-history-younghunjo1.tistory.com/585",설명:"\uD83D\uDCA1 쿠버네티스에서 파드의 리소스 사용량을 제한하고 관리하는 방법을 상세히 설명하며, requests/limits를 통한 오버커밋과 QoS 클래스를 활용한 우선순위 설정, ResourceQuota/LimitRange를 통한 네임스페이스별 자원 관리까지 실무에 필요한 핵심 개념들을 체계적으로 다룬 유용한 글입니다.",작가:"조영훈"}],Fullstack:[{제목:"음악 검색 시스템 만들기",주소:"https://kciter.so/posts/music-recognition-system/",설명:"\uD83C\uDFB5 Shazam과 같은 음악 검색 시스템의 마법 같은 원리를 FFT, 스펙트로그램, 소리 지문 등을 활용해 직접 구현하는 흥미로운 기술 해설!",작가:"이선협"},{제목:"추상화를 통해 외부 시스템의 결합도를 낮추고 테스트 가능성(Testability) 높이기",주소:"https://velog.io/@langoustine/abstraction-to-testability",설명:"\uD83C\uDFAF 추상화를 통해 외부 시스템과의 결합도를 낮추고, 테스트 용이성을 높여 더 유연하고 확장 가능한 애플리케이션 구조를 만드는 사례입니다.",작가:"문태준"}]},"3rd":{AIML:[{제목:"결정트리 모델(Decision Tree)이 나의 문제를 해결해줄 수 있을까?",주소:"https://woocosmos.github.io/decision-tree/",작가:"우연수",설명:"\uD83C\uDF33 제한된 범위의 정수 응답 데이터에 결정트리가 적합한 이유와 비모수적 모델로서 어떤 특징을 가지고 있는지 설명하는 유익한 글입니다."}],Backend:[{제목:"Hibernate 의 '불편한' 편의 기능들.",주소:"https://monday9pm.com/hibernate-%EC%9D%98-%EB%B6%88%ED%8E%B8%ED%95%9C-%ED%8E%B8%EC%9D%98-%EA%B8%B0%EB%8A%A5%EB%93%A4-06a1fbc7492a/",작가:"최현구",설명:"\uD83E\uDD14 Hibernate의 편의성이 오히려 불편함을 초래할 수 있다는 점을 ActionQueue의 SQL 정렬과 JPQL의 즉시 flush 현상을 통해 설명하며, 실용적 대안으로 queryDSL과 직접 SQL 작성을 추천합니다."},{제목:"Kotlin, Collection vs Sequence - 최적의 선택 기준",주소:"https://velog.io/@wisepine/Kotlin-Collection-vs-Sequence-%EC%B5%9C%EC%A0%81%EC%9D%98-%EC%84%A0%ED%83%9D-%EA%B8%B0%EC%A4%80/",작가:"김혜송",설명:"\uD83D\uDD0D 컬렉션과 시퀀스의 장단점을 비교하여 작은 데이터셋은 컬렉션이, 큰 데이터셋은 시퀀스가 유리하며 병렬처리가 필요하거나 정렬이 필요한 경우는 컬렉션을 추천합니다."},{제목:"spring kafka auto-commit 동작원리 - 데이터 유실과 중복처리",주소:"https://junuuu.tistory.com/1028/",작가:"김준우",설명:"\uD83D\uDD0D Kafka의 auto-commit은 poll() 메서드 호출 시점에 commit이 이루어져 메시지 중복은 발생할 수 있으나 유실은 방지할 수 있다는 내용에 대한 글입니다."},{제목:"서버에서 Graceful Shutdown은 왜 필요할까",주소:"https://milkymilky0116.github.io/posts/Graceful_Shutdown/",작가:"이성진",설명:"\uD83D\uDED1 서버의 안정성과 사용자 경험을 보장하기 위해 Graceful Shutdown은 필수적이며, 진행 중인 요청을 안전하게 처리하고 자원을 정리하여 예기치 못한 서버 종료 상황에서도 신뢰성 있는 서비스를 제공할 수 있습니다."},{제목:"퇴사를 고민하는 주니어에게,",주소:"https://imksh.com/128/",작가:"강승현",설명:"\uD83E\uDD14 주니어 개발자의 퇴사 고민을 건강, 자기 효능감, 성장이라는 3가지 관점에서 분석하며 신중한 결정을 돕는 실용적인 조언글"}],Data:[{제목:"Garbage In, Garbage Out! 당신의 데이터 믿을만한가요?",주소:"https://suminii.tistory.com/entry/Garbage-In-Garbage-Out-%EB%8B%B9%EC%8B%A0%EC%9D%98-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%AF%BF%EC%9D%84%EB%A7%8C%ED%95%9C%EA%B0%80%EC%9A%94/",작가:"김수민b",설명:"\uD83D\uDCCA 데이터 품질의 중요성을 강조하며 'Garbage In, Garbage Out' 원칙을 통해 신뢰할 수 있는 데이터 관리의 필요성을 설명하는 유익한 글입니다."},{제목:"Text-to-SQL를 알아보자",주소:"https://ivoryrabbit.github.io/posts/Text-to-SQL/",작가:"이동규",설명:"\uD83D\uDD0D SQL 지식이 없는 비개발자도 자연어로 데이터를 조회할 수 있게 해주는 Text-to-SQL 기술을 Python으로 구현하는 방법을 상세히 설명한 글로, OpenAI API와 Vector Database를 활용한 실용적인 예제를 제공합니다."},{제목:"A/B 테스트로 팝업 성과 측정하기",주소:"https://www.actionspeak.kr/blog/guide/abt/",작가:"조해창",설명:"\uD83D\uDCCA A/B 테스트로 팝업의 효과를 객관적으로 측정하여 데이터 기반의 의사결정을 할 수 있도록 GTM, GA4, BigQuery, Tableau를 활용한 상세한 분석 가이드를 제공합니다."}],Frontend:[{제목:"JS 탐구생활 - 클로저 시리즈 1. 클로저란 무엇인가?",주소:"https://witch.work/posts/javascript-closure-deep-dive-application/",작가:"김성현a",설명:"\uD83D\uDD0D 클로저의 핵심 개념과 활용을 명확하게 설명한 글로, 일급 객체 함수와 렉시컬 스코프를 사용하는 언어에서 표현식의 평가 결과로서 외부 환경에 대한 참조를 함께 묶어 정보 은닉, 전달, 추적 등에 활용할 수 있음을 상세히 다룹니다."},{제목:"JS 탐구생활 - 클로저 시리즈 2. 수학자들의 꿈에서 JS의 스타가 되기까지",주소:"https://witch.work/posts/javascript-closure-deep-dive-history/",작가:"김성현a",설명:"\uD83D\uDD0D 클로저의 역사를 추적하며 수학자들의 꿈에서 시작해 JavaScript의 핵심 기능이 되기까지의 여정을 다룬 글로, 람다 계산법과 함수형 프로그래밍의 발전 과정을 통해 클로저의 중요성을 이해할 수 있습니다."},{제목:"React Hook Form과 유사한 인터페이스 만들기",주소:"https://d5ng-blog.vercel.app/React/rhf/",작가:"이동현",설명:"\uD83D\uDD27 React Hook Form과 유사한 인터페이스를 직접 구현하여 일관성 있는 폼 관리를 가능하게 했고, 제어/비제어 컴포넌트의 장단점을 고려한 성능 최적화와 타입 안정성을 확보했습니다."},{제목:"\uD83C\uDF54 ദി=\xb4∀｀) 안녕하새용저는햄부기애용",주소:"https://sungpaks.github.io/draggable-and-auto-walking-character-chrome-extension/",작가:"조성훈",설명:"\uD83C\uDFAE 드래그 앤 드롭으로 움직이고 랜덤하게 걷는 모션을 보여주는 귀여운 햄버거 캐릭터를 크롬 확장프로그램으로 구현한 재미있는 프로젝트입니다."}],Fullstack:[{제목:"데이터 스트림이 무엇이냐는 질문에 제대로 대답해보기",주소:"https://velog.io/@broccolism/%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%8A%A4%ED%8A%B8%EB%A6%BC%EC%9D%B4-%EB%AC%B4%EC%97%87%EC%9D%B4%EB%83%90%EB%8A%94-%EC%A7%88%EB%AC%B8%EC%97%90-%EC%A0%9C%EB%8C%80%EB%A1%9C-%EB%8C%80%EB%8B%B5%ED%95%B4%EB%B3%B4%EA%B8%B0/",작가:"손영인",설명:"\uD83D\uDD04 데이터 스트림의 개념과 특징을 명확하게 설명한 글로, 변경 이벤트의 연속성과 무한한 데이터 처리라는 핵심을 이해하기 쉽게 고스톱 예시와 함께 설명하여 추천합니다."}],Infra:[{제목:"싱글톤에 대한 오해",주소:"https://eeeasycode.github.io/do_you_know_singleton/",작가:"이창민",설명:"\uD83D\uDD0D 정적 팩토리 메서드 패턴만으로는 싱글톤이 보장되지 않는다는 오해를 바로잡고, NestJS와 Spring Core의 싱글톤 객체 관리 방식을 상세히 분석한 유익한 글입니다."}]},"4th":{AIML:[{제목:"LLM Evaluation이 중요한 이유",주소:"https://jasonkang14.github.io/llm/why-evaluation-is-important",작가:"강병진",설명:"\uD83E\uDD16 대규모 언어 모델(LLM) 애플리케이션 개발에서 평가의 중요성은 일관성 없는 출력, 환각 위험, 예측 불가능한 사용자 상호작용을 관리하고 품질을 통제하여 신뢰할 수 있는 AI 서비스를 구축하는 핵심 과정입니다."},{제목:"코딩테스트를 위한 대표 유형 중급 알고리즘 정리(by.백준 플래티넘)",주소:"https://velog.io/@8804who/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EC%9C%84%ED%95%9C-%EB%8C%80%ED%91%9C-%EC%9C%A0%ED%98%95-%EC%A4%91%EA%B8%89-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%A0%95%EB%A6%ACby.%EB%B0%B1%EC%A4%80-%ED%94%8C%EB%9E%98%ED%8B%B0%EB%84%98",작가:"김주성",설명:"\uD83D\uDE80 코딩테스트 준비의 핵심 알고리즘들을 중급 수준에서 체계적으로 정리하여, 다익스트라/플로이드워셜/크루스칼/스위핑/위상정렬 등 핵심 알고리즘을 실전 예제와 함께 상세히 설명한 유용한 학습 자료입니다."}],Backend:[{제목:"해시 자료구조와 HashMap이 해시 충돌을 해결하는 방법 | Codongmin",주소:"https://dongmin-sim.github.io/posts/hash-data-structure/",작가:"심동민",설명:"\uD83E\uDDE0 해시 자료구조의 핵심 원리와 Java HashMap의 해시 충돌 해결 방식을 깊이 있게 이해할 수 있는 완벽한 가이드로, 개발자들에게 해시 메커니즘의 내부 동작과 최적화 전략을 제공하는 필수 학습 자료입니다."},{제목:"(MySQL) 인덱스가 B+Tree 를 선택한 이유",주소:"https://hugehoo-blog.vercel.app/blog/Database/B%20tree%20as%20Index",작가:"임성후",설명:"\uD83C\uDF33 데이터베이스 성능의 비밀, B+Tree! 노드당 여러 키를 저장하여 트리 깊이를 낮추고 Disk I/O를 획기적으로 줄여 MySQL 인덱스의 검색 속도와 효율성을 극대화하는 혁신적인 자료구조입니다."},{제목:"C언어로 알아보는 객체 지향 프로그래밍, 가상 함수 테이블(vtable)과 메서드 구현",주소:"https://chinensis.tistory.com/entry/C%EC%96%B8%EC%96%B4%EB%A1%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EB%8A%94-%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D",작가:"이승민b",설명:"\uD83C\uDFAE C언어로 객체 지향 프로그래밍의 핵심 원리를 탐구하며, 구조체와 함수 포인터를 활용해 가상 함수 테이블과 동적 메서드 호출 방식을 게임 개발을 통해 실제적으로 구현하고 설명하는 심도 있는 기술 탐험 가이드입니다."},{제목:"카드 발동 제네릭 와일드카드?(feat. 이펙티브 자바)",주소:"https://velog.io/@prettylee620/%EC%B9%B4%EB%93%9C-%EB%B0%9C%EB%8F%99-%EC%A0%9C%EB%84%A4%EB%A6%AD-%EC%99%80%EC%9D%BC%EB%93%9C%EC%B9%B4%EB%93%9Cfeat.-%EC%9D%B4%ED%8E%99%ED%8B%B0%EB%B8%8C-%EC%9E%90%EB%B0%94",작가:"이금주",설명:"\uD83D\uDE80 제네릭의 핵심은 타입 안전성을 높이고 코드 재사용성을 강화하는 자바의 강력한 타입 시스템 기능으로, 컴파일 시점에 타입 검사를 통해 런타임 오류를 사전에 방지하는 중요한 개념입니다."}],Data:[{제목:"3달 간의 SQL스터디를 마무리하며... (부제 모더레이터로써의 스터디 후기)",주소:"https://spaceofyujin.tistory.com/42",작가:"서유진",설명:"\uD83C\uDF1F 3개월간의 SQL 스터디를 통해 동료들과 함께 성장하고, 모더레이터로서 데이터 기반 업무 문화 확산에 기여한 감동적인 학습 여정을 소개합니다."}],Frontend:[{제목:"왜 Object.keys는 string[] 타입을 리턴하나요?",주소:"https://velog.io/@wns450/%EC%99%9C-Object.keys%EB%8A%94-string-%ED%83%80%EC%9E%85%EC%9D%84-%EB%A6%AC%ED%84%B4%ED%95%98%EB%82%98%EC%9A%94",작가:"황낙준",설명:"\uD83D\uDD0D 타입스크립트의 Object.keys()가 항상 string[]을 반환하는 이유는 런타임 동작을 보존하고, 열린 구조의 타입 시스템을 유지하기 위한 의도적인 설계로, 구조적 타이핑의 유연성을 최대한 반영한 선택입니다."},{제목:"다형성 컴포넌트 구현에 문제가 있나요?",주소:"https://blog.sjoleee.info/posts/polymorphic-components",작가:"이상조",설명:"\uD83D\uDE80 다형성 컴포넌트로 디자인 시스템의 재사용성과 유연성을 극대화하여, 컴포넌트의 확장성과 타입 안전성을 높이는 혁신적인 React 컴포넌트 구현 방법을 소개합니다!"},{제목:"면접관께서 가로되, 번들러가 무엇이냐 물으니",주소:"https://sungpaks.github.io/what-and-why-and-how-bundler/",작가:"조성훈",설명:"\uD83D\uDCDA 웹 개발자의 필수 지식인 번들러의 개념과 역할을 기술 면접 경험을 통해 상세히 설명한 글로, 번들러의 등장 배경부터 실제 활용까지 체계적으로 이해할 수 있어 추천합니다."},{제목:"(年間 회고) 신입 개발자 생존기 희노애락 365일",주소:"https://velog.io/@blcklamb/%E5%B9%B4%E9%96%93-%ED%9A%8C%EA%B3%A0-%EC%8B%A0%EC%9E%85-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EC%83%9D%EC%A1%B4%EA%B8%B0-%ED%9D%AC%EB%85%B8%EC%95%A0%EB%9D%BD-365%EC%9D%BC",작가:"김채정",설명:"\uD83C\uDF31 신입 개발자의 솔직하고 감동적인 1년 회고로, 성장의 고민과 희망을 진솔하게 담아낸 성장 스토리를 소개합니다!"},{제목:"실전 오픈소스를 기여하며 느끼고 배운 것",주소:"https://www.gyumong.info/daily/open-source-contribution-2",작가:"김민규",설명:"\uD83D\uDE80 오픈소스 기여를 통해 기술적 성장, 재미, 그리고 도파민 충전까지! 전 세계 개발자들과 함께 성장하며 라이브러리의 결함들을 개선하는 즐거운 여정을 소개합니다."},{제목:"나만의 간판 생성 프로젝트 개발기 (feat. 풀스택 도전기)",주소:"https://kwonbomi.xyz/blog/blog3",작가:"권보미",설명:"\uD83D\uDCA1 간판 이미지를 활용한 풀스택 프로젝트로, Supabase를 활용해 DB 구축부터 API 개발, 이미지 렌더링까지 직접 구현한 개발 과정을 상세히 다룬 기술 블로그입니다."}],Fullstack:[{제목:"TypeScript Namespace Deep Dive",주소:"https://www.verycosy.net/posts/2024/11/typescript-namespace-deep-dive",작가:"장진호",설명:"\uD83E\uDDE9 TypeScript의 namespace는 타입 계층 표현과 편의성을 위해 여전히 유용하며, 특히 타입 전용으로 사용할 때 강력한 도구로 활용할 수 있는 TypeScript의 숨은 기능입니다."}],PMPO:[{제목:"스타트업의 QA 프로세스 개선 (1) 우리 모두가 QA입니다\uD83D\uDE09",주소:"https://chaerangja.tistory.com/27",작가:"김채은",설명:"\uD83D\uDE80 스타트업의 QA 프로세스 개선, 모든 팀원이 품질 보증의 주체가 되어 효율성과 협업을 높이는 혁신적인 접근 방식을 소개합니다!"}]},"5th":{Data:[{제목:"2024년 회고. 일과 글과 책과 습習.",주소:"https://brunch.co.kr/@hnote/157",작가:"이소희a",설명:"\uD83C\uDF1F 2024년을 돌아보며, 일과 글과 책에 대한 열정으로 꾸준히 성장하고 자기계발에 힘쓴 한 해였던 작가의 진솔하고 감동적인 회고 에세이로, 개인의 성장과 도전 과정을 생생하게 느낄 수 있는 인사이트 가득한 글입니다."},{제목:"Savitzky-Golay(사비츠키 골레이) 필터",주소:"https://infatigablemente.tistory.com/entry/Savitzky-Golay%EC%82%AC%EB%B9%84%EC%B8%A0%ED%82%A4-%EA%B3%A8%EB%A0%88%EC%9D%B4-%ED%95%84%ED%84%B0",작가:"송민혜",설명:"\uD83D\uDCCA 센서 데이터의 노이즈를 효과적으로 제거하면서도 중요한 특징은 보존할 수 있는 Savitzky-Golay 필터에 대해, 직관적인 이해와 실제 구현 방법까지 상세히 설명한 유용한 가이드입니다."}],Backend:[{제목:"네 번째 회사에 이르기 까지",주소:"https://junior-datalist.tistory.com/399",작가:"임성후",설명:"\uD83D\uDD04 글또와 함께한 성장의 여정, 네 번째 회사로 도전하며 개인적 성장과 새로운 기술 학습, 그리고 Go 언어 경험을 바탕으로 성공적인 이직을 이뤄낸 감동적인 커리어 이야기를 소개합니다!"},{제목:"(Golang) Defer 를 알아보자",주소:"https://hugehoo-blog.vercel.app/blog/Go/get%20deeper%20in%20defer",작가:"임성후",설명:"\uD83D\uDD0D Go 언어의 defer는 함수 종료 시 자원 해제와 코드 가독성을 높이는 강력한 기능으로, 리소스 관리와 예외 처리가 필요하다면 꼭 한번 살펴보시기 바랍니다."},{제목:"나의 Github Copilot 활용법 & Tip (for IntelliJ)",주소:"https://velog.io/@wisepine/나의-Github-Copilot-활용법-Tip-for-IntelliJ",작가:"김혜송",설명:"\uD83E\uDD16 IntelliJ에서 GitHub Copilot을 효과적으로 활용하는 방법을 상세히 소개한 글로, 특히 백엔드 개발자를 위한 실용적인 15가지 유즈케이스와 주의사항을 통해 AI 코딩 어시스턴트를 현명하게 활용하는 방법을 배울 수 있습니다."},{제목:"Big Ball of Mud 탈출을 위한 발버둥",주소:"https://medium.com/@woojin8787/big-ball-of-mud-%ED%83%88%EC%B6%9C%EC%9D%84-%EC%9C%84%ED%95%9C-%EB%B0%9C%EB%B2%84%EB%91%A5-e24ed216c3c0",작가:"천진우",설명:"\uD83D\uDEA7 소프트웨어 개발의 늪에서 탈출하기 위한 실용적이고 현실적인 Big Ball of Mud 극복 전략을 배울 수 있는 깊이 있는 기술 에세이로, 실제 현장에서 겪는 기술적 부채와 복잡성 문제를 생생하게 풀어낸 성찰적 이야기입니다."},{제목:"내가 Bloc를 이해한 방법",주소:"https://velog.io/@aquashdw/내가-Bloc를-이해한-방법",작가:"박지호",설명:"\uD83C\uDFAE Flutter Bloc로 지뢰찾기 게임 개발 경험기 - 프론트엔드에서 백엔드 같은 상태 관리의 매력을 발견한 개발자의 흥미로운 기술 여정을 소개합니다!"}],Frontend:[{제목:'CSS의 새 로고 Color - "rebeccapurple"에 관한 이야기.',주소:"https://velog.io/@ainochi95/CSS%EC%9D%98-%EC%83%88-%EB%A1%9C%EA%B3%A0-Color-rebeccapurple%EC%97%90-%EA%B4%80%ED%95%9C-%EC%9D%B4%EC%95%BC%EA%B8%B0",작가:"강민석",설명:"\uD83D\uDC9C CSS의 새 로고 컬러 'rebeccapurple'에 담긴 감동적인 이야기 - 6살의 나이로 세상을 떠난 에릭 마이어의 딸 레베카를 기리기 위해 만들어진 색상이 10년 만에 CSS의 공식 로고 컬러가 되기까지의 여정을 소개합니다."},{제목:"웹 폰트 로드 시간 줄이기",주소:"https://seri-log.netlify.app/web_font_optimization/",작가:"박세리",설명:"\uD83D\uDCA1 웹 폰트 로딩 속도를 획기적으로 개선하고, 사용자 경험을 높이기 위한 서브셋 폰트 최적화 방법을 상세히 소개하는 기술 블로그 포스트로, 폰트 용량을 80% 줄이고 로딩 시간을 획기적으로 단축한 실전 최적화 사례를 배울 수 있습니다."},{제목:"Reflow 딥다이브 (feat. Performance 분석)",주소:"https://d5ng-blog.vercel.app/JavaScript/reflow",작가:"이동현",설명:"\uD83D\uDD0D 브라우저의 Reflow 동작을 Performance 분석을 통해 심층적으로 파헤치고, 비동기/동기식 Reflow의 차이점과 최적화 방안을 실제 사례와 함께 상세히 설명한 기술 아티클입니다."},{제목:"(Gravidot 0.1.0) 다같이 아이디어를 터치해볼까요? \uD83D\uDDEF️\uD83E\uDD0F\uD83C\uDFB6",주소:"https://medium.com/@howyoujini/gravidot-0-1-0-다같이-아이디어를-터치해볼까요-️-f814499cd39c",작가:"홍유진",설명:"\uD83C\uDFA8 멀티터치로 아이디어를 연결하고 실시간 협업이 가능한 브레인스토밍 서비스 Gravidot을 직접 개발한 과정과 기술적 도전, 창의력 증진을 위한 인터페이스 구현 경험을 상세히 공유한 개발 이야기!"},{제목:"NEXT_PUBLIC_ 환경변수를 빌드 이후에 수정할 순 없나? 함께 알아보자.",주소:"https://velog.io/@bbbjihan/NEXTPUBLIC-환경변수를-빌드-이후에-수정할-순-없나-함께-알아보자",작가:"박지한",설명:"\uD83C\uDF10 Next.js 환경변수의 런타임 설정 방법을 깊이 있게 탐구하고, 빌드 이후 환경변수 주입의 다양한 접근법을 실제 사례와 함께 상세히 소개하는 기술적이고 실용적인 가이드 포스트입니다."}],Infra:[{제목:"Amazon MSK 커넥션 끊김 이슈 디버깅 (feat. Nest.js, IRSA)",주소:"https://custom-li.tistory.com/220",작가:"이용우",설명:"\uD83D\uDD75️ Amazon MSK 커넥션 끊김 이슈를 Nest.js와 IRSA 환경에서 발생한 실제 디버깅 과정과 해결 방법을 상세히 공유하는 기술적으로 깊이 있는 문제 해결 가이드입니다."}]},"6th":{Fullstack:[{제목:"2025년으로 넘어가는 문턱에서, 일터의 소로.",주소:"https://springfall.cc/article/2025-01/thoreau",작가:"김태훈",설명:"\uD83C\uDF31 2024년의 회고와 2025년의 목표를 담은 글로, 자본주의와 기술 발전 속에서 진정한 삶의 가치를 찾아가는 여정을 '일터의 소로'라는 책을 통해 깊이 있게 성찰한 이야기입니다."},{제목:"안전하게 무한 루프 탈출하기 - Handling SIGTERM in kubernetes with python",주소:"https://littlemobs.com/blog/safe-loop-termination/",작가:"김인호",설명:"\uD83D\uDEA6 쿠버네티스 환경에서 Python 프로세스의 안전한 무한 루프 종료 방법을 배우고, SIGTERM/SIGINT 핸들링을 통해 리소스 정리와 우아한 종료를 구현하는 실용적인 가이드입니다."},{제목:"이력또: 커뮤니티에서 이력서 피드백 주고 받기",주소:"https://medium.com/@sudosubin/이력또-커뮤니티에서-이력서-피드백-주고-받기-97e14233bc39",작가:"김수빈",설명:"\uD83D\uDCBC 개발자들의 이력서 피드백을 위한 '이력또' 소모임이 만들어진 배경과 Slack Workflow를 활용한 운영 방식, 41건의 리뷰 경험을 통해 얻은 인사이트를 소개하는 글입니다."}],Data:[{제목:"[Goodbye 2024년 Hello 2025년] 연말 회고 공유",주소:"https://velog.io/@h-go-getter/Goodbye-2024%EB%85%84-Hello-2025%EB%85%84",작가:"장회정",설명:"\uD83D\uDCDD 2024년 회고를 통해 시간관리와 목표달성 전략을 배울 수 있는 글로, 우선순위에 따른 시간 투자와 자동화 시스템 도입으로 성과를 이룬 경험담이 상세히 담겨있어 2025년 계획 수립에 도움이 될 만한 글입니다."},{제목:"가상의 게임 데이터로 살펴보는 이중차분법 (feat. \uD83E\uDDD9 법사야캐요)",주소:"https://blessedby-clt.tistory.com/83",작가:"조슬지",설명:"\uD83E\uDDD9 통계의 마법 같은 이중차분법을 게임 데이터로 쉽고 재미있게 배울 수 있는 마법 같은 튜토리얼로, 복잡한 통계 개념을 게임 예시를 통해 직관적으로 이해할 수 있는 흥미로운 학습 자료입니다!"}],Backend:[{제목:"진화 LEVEL UP 신입개발자로 취업한 2024의 한 해를 돌아보자 (++ 균형과 도약의 2025)",주소:"https://velog.io/@prettylee620/%EC%A7%84%ED%99%94-LEVEL-UP-%EC%8B%A0%EC%9E%85%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%A1%9C-%EC%B7%A8%EC%97%85%ED%95%9C-2024%EC%9D%98-%ED%95%9C-%ED%95%B4%EB%A5%BC-%EB%8F%8C%EC%95%84%EB%B3%B4%EC%9E%90-%EA%B7%A0%ED%98%95%EA%B3%BC-%EB%8F%84%EC%95%BD%EC%9D%98-2025",작가:"이금주",설명:"\uD83C\uDF1F 2024년 한 해를 돌아보는 진화와 성장의 여정, 커피챗과 다양한 경험을 통해 자신만의 길을 개척한 신입 개발자의 감동적이고 투명한 회고록으로 개인 성장과 도전의 모든 순간을 생생하게 담아냈습니다!"},{제목:"Go에서 문자열 빠르게 이어붙이는 방법",주소:"https://www.winterjung.dev/string-concat-performance-benchmark-in-go/",작가:"정겨울",설명:"\uD83D\uDCA1 Go에서 문자열 연결 시 strings.Builder와 strings.Join이 가장 효율적이며, 고정 인자일 때는 + 연산자도 좋은 성능을 보인다는 벤치마크 분석 글입니다."},{제목:"잃어버린 커밋을 찾아서 (git reflog, git fsck)",주소:"https://devpanpan.tistory.com/115",작가:"하이현",설명:"\uD83D\uDD75️ Git의 숨겨진 기능을 활용해 잃어버린 커밋을 복구하는 놀라운 방법들을 소개합니다! 개발자들이 실수로 삭제한 커밋을 되살리는 세 가지 핵심 기술(커밋 해시, git reflog, git fsck)을 알려드립니다."},{제목:"[Kotlin] 돌려줘요 static. Kotlin 에는 Java 의 static 키워드가 없다. 대신…",주소:"https://jaeyeong951.medium.com/kotlin-%EB%8F%8C%EB%A0%A4%EC%A4%98%EC%9A%94-static-866f31091466",작가:"김재영",설명:'\uD83E\uDD14 Kotlin의 companion object를 사용하게 된 배경과 설계 철학을 이해하고 싶은 분들에게 추천하는 글로, "everything is object" 관점에서 static 대신 object 키워드를 채택한 이유를 상세히 설명합니다.'},{제목:"Token Gradient Descent를 이용한 LLM 글자수 조절",주소:"https://velog.io/@jghff700/Token-Gradient-Descent를-이용한-LLM-글자수-조절",작가:"장영환",설명:"\uD83D\uDE80 Token Gradient Descent를 활용해 LLM의 글자수를 정밀하게 조절하는 혁신적인 방법으로, 멀티스레딩과 지수 백오프 전략을 결합하여 데이터셋의 품질을 획기적으로 개선한 기술적 접근 방식을 소개합니다."}],Frontend:[{제목:"normalize 메서드를 이용해 유니코드 문자열 정규화하기",주소:"https://wormwlrm.github.io/2024/12/30/String-Normalize.html",작가:"정종윤",설명:"\uD83D\uDD20 JavaScript에서 유니코드 문자열을 정규화하는 normalize 메서드의 4가지 방식(NFD, NFC, NFKD, NFKC)을 이해하고 활용하는 방법을 상세히 설명한 유익한 글로, 국제화된 웹 애플리케이션 개발 시 문자열 처리에 도움이 됩니다."},{제목:"Next.js 캐싱 때문에 Axios 인터셉터를 포기하라고? Axios adapter 설정으로 Next.js caching 지원 받기",주소:"https://velog.io/@bbbjihan/Next.js-캐싱-때문에-Axios-인터셉터를-포기하라고-Axios-adapter-설정으로-Next.js-caching-지원-받기",작가:"박지한",설명:"\uD83D\uDD27 Next.js의 캐싱 기능을 포기하지 않고도 Axios의 편리한 기능을 함께 사용할 수 있는 방법을 소개하는 글로, Axios adapter 설정을 통해 Next.js의 캐싱 지원을 받는 실용적인 해결책을 제시합니다."},{제목:"Figma 플러그인 개발기 \uD83D\uDEE0️- Select Frame To WebP",주소:"https://velog.io/@sumi-0011/figma-plugin-webp",작가:"변수미",설명:"\uD83D\uDEE0️ Figma에서 WebP 변환이 불편했던 경험을 바탕으로 직접 플러그인을 개발한 과정을 상세히 다룬 글로, 플러그인 개발에 관심 있는 개발자들에게 실용적인 인사이트를 제공합니다."},{제목:"이상적인 아키텍처의 특징 - 클린 아키텍처를 통해 바라본",주소:"https://velog.io/@bo-like-chicken/이상적인-아키텍처의-특징-클린-아키텍처를-통해-바라본",작가:"백보성",설명:"\uD83C\uDFD7️ 클린 아키텍처의 핵심 원칙을 통해 소프트웨어 개발의 유연성과 유지보수성을 높이는 아키텍처 설계 방법을 깊이 있게 탐구하고, 프로젝트 특성에 맞는 최적의 아키텍처를 찾아가는 여정을 소개합니다."}],iOS:[{제목:"12월 23일을 끝으로 운영을 종료합니다(블로그아님)",주소:"https://velog.io/@kimscastle/12%EC%9B%94-23%EC%9D%BC%EC%9D%84-%EB%81%9D%EC%9C%BC%EB%A1%9C-%EC%9A%B4%EC%98%81%EC%9D%84-%EC%A2%85%EB%A3%8C%ED%95%A9%EB%8B%88%EB%8B%A4",작가:"김의성",설명:"\uD83D\uDCAD 젠티 프로젝트 1년간의 회고록: 단 한 명의 유저를 위한 업데이트부터 팀의 가치와 설득의 중요성까지, 스타트업 경험을 통해 배운 진정한 개발자의 자세와 성장 스토리를 담은 글입니다."}]},"7th":{Backend:[{제목:"servlet filter 를 활용해 불필요한 요청 원천 차단하기",주소:"https://hyeon9mak.github.io/block-request-using-the-servlet-filter/",작가:"최현구",설명:"\uD83D\uDEE1️ 서버의 불필요한 요청을 효율적으로 차단하는 방법을 소개하는 글로, Servlet Filter를 활용해 애플리케이션 서버 진입 전에 스팸 봇이나 크롤링 봇의 요청을 차단하는 상세한 구현 방법을 설명합니다."},{제목:"AWS 서버리스로 구현한 논문 요약 서비스 개발기",주소:"https://doxxx.dev/blog/2025/01/19/medical-paper-summarization-service-with-aws-serverless",작가:"김도율",설명:"\uD83D\uDE80 AWS 서버리스로 의학 논문 요약 서비스를 구현한 실제 개발 경험을 상세히 공유하며, Textract와 Bedrock을 활용한 텍스트 추출/요약 파이프라인부터 검색/구독 시스템까지 서버리스 아키텍처의 장단점과 사례를 배울 수 있는 유익한 기술 블로그입니다."},{제목:"HikariCP를 이해하면 풀 사이즈 설정이 보인다",주소:"https://myvelop.tistory.com/250",작가:"박종혁",설명:"\uD83D\uDCA1 Spring Boot의 기본 커넥션 풀인 HikariCP의 내부 동작 원리와 최적의 풀 사이즈 설정 방법을 이해하여 DB 성능을 최적화할 수 있는 실용적인 가이드"},{제목:"장애 회고를 도입하며 고민한 것들",주소:"https://velog.io/@jghff700/장애-회고를-도입하며-느낀-점들",작가:"장영환",설명:"\uD83D\uDEA8 소프트웨어 개발 팀의 장애 대응과 회고 문화를 배우고 싶다면, 장애를 성장의 기회로 전환하는 혁신적인 접근 방식과 체계적인 장애 관리 프로세스를 소개하는 글입니다!"}],Frontend:[{제목:"Finite State Machine(유한 상태 기계)을 활용해 복잡한 퍼널 관리하기",주소:"https://gamguma.dev/post/2025/01/state-machine",작가:"서준환",설명:"\uD83D\uDD04 복잡한 다단계 폼과 퍼널 관리를 위해 유한 상태 기계(FSM)를 활용하여 상태 전환을 명시적이고 예측 가능하게 만들고, 코드의 가독성과 유지보수성을 크게 개선할 수 있는 강력한 상태 관리 패턴을 소개합니다."},{제목:"Next.js 블로그 SEO 개선 과정",주소:"https://blog.huns.site/blog/posts/dev/research/improve-seo-of-my-blog",작가:"박승훈",설명:"\uD83D\uDD0D SEO 최적화에 관심있는 개발자라면 Next.js 블로그의 실제 검색엔진 최적화 과정과 적용 사례를 상세히 살펴볼 수 있는 유익한 글입니다."},{제목:"React Fiber Architecture. 수 천 개의 UI 요소들을 합리적인 성능으로 업데이트하기",주소:"https://medium.com/@howyoujini/react-fiber-architecture-b41ca01c9d21",작가:"홍유진",설명:"\uD83E\uDD14 React의 Fiber Architecture가 수천 개의 UI 요소를 효율적으로 처리하는 방법을 이해하고 싶다면, Stack Reconciler의 한계와 Fiber의 점진적 렌더링, 우선순위 관리 기능을 상세히 설명한 이 글을 추천합니다."},{제목:"재귀 컴포넌트와 BFS로 약관 동의 기능을 구현해보자",주소:"https://velog.io/@ubin_ing/agreement-with-recursive-and-bfs",작가:"박우빈",설명:"\uD83C\uDF33 재귀 컴포넌트와 BFS를 활용해 깊이 제한 없는 약관 동의 기능을 React로 구현하며, 단 한 번의 렌더링과 유연한 상태 관리로 프론트엔드 요구사항을 효율적으로 해결하는 혁신적인 접근 방식을 소개합니다!"},{제목:"영어로도 볼 수 있는 Next.js 블로그 만들기",주소:"https://witch.work/posts/blog-auto-translation",작가:"김성현a",설명:"\uD83C\uDF10 Next.js 블로그를 AI 번역으로 다국어 지원하고, 효율적인 번역 워크플로우를 구축하여 글로벌 독자들에게 콘텐츠를 제공하는 혁신적인 블로그 개선 프로젝트입니다."}],iOS:[{제목:"@Published와 CurrentValueSubject는 똑같은 거 아닌가요?",주소:"https://medium.com/@radiantchoi/published와-currentvaluesubject는-똑같은-거-아닌가요-1747d56f9245",작가:"최경민",설명:"\uD83E\uDDD0 Swift Combine에서 @Published와 CurrentValueSubject의 업데이트 타이밍 차이를 알아야 하는 이유 - 의도치 않은 사이드 이펙트를 방지하고 반응형 프로그래밍의 정확성을 높일 수 있는 중요한 기술적 인사이트를 제공합니다."}],Data:[{제목:"GPU OOM과 이별하는 법",주소:"https://pizzathiefz.github.io/posts/gpu-out-of-memory/",작가:"손영신",설명:"\uD83C\uDF6F GPU 메모리 부족(OOM) 문제를 해결하기 위한 다양한 방법들을 상세히 설명한 글로, 메모리 모니터링부터 Mixed Precision Training까지 실용적인 해결책을 코드와 함께 제시합니다."}],AIML:[{제목:"LLM을 활용한 행동 분석 - 손톱 물어뜯기 탐지의 새로운 접근법",주소:"https://rimo.tistory.com/47",작가:"손정균",설명:"\uD83E\uDD16 LLM과 컴퓨터 비전을 활용한 손톱 물어뜯기 행동 탐지 기술에 대한 새로운 접근법을 소개하는 글로, AI 기술의 실생활 적용 사례를 확인할 수 있어 추천합니다."}]},"8th":{Data:[{제목:"조인 기법 종류",주소:"https://velog.io/@chltpdus48/%EC%A1%B0%EC%9D%B8-%EA%B8%B0%EB%B2%95-%EC%A2%85%EB%A5%98",작가:"최세연",설명:"\uD83D\uDD0D 데이터베이스의 조인 기법(Nested Loop, Sort Merge, Hash Join)을 깊이 있게 분석하여, 작동 원리와 특징을 상세히 설명한 글로, 데이터베이스 성능 튜닝에 관심 있는 개발자와 DBA에게 필수적인 인사이트를 제공합니다."},{제목:"독서 붐은 왔나요? 데이터로 살펴 본 노벨 문학상 수상 이후의 변화",주소:"https://blessedby-clt.tistory.com/86",작가:"조슬지",설명:"\uD83D\uDCDA 노벨 문학상 수상 이후 독서 트렌드의 데이터 기반 변화를 흥미롭고 심층적으로 분석한 글로, 독서와 문학에 관심 있는 독자들에게 통계적 인사이트를 제공하는 흥미로운 데이터 저널리즘 포스팅입니다."},{제목:"[분석] 장바구니 분석에 대한 고민들",주소:"https://schatz37.tistory.com/77",작가:"고동현",설명:"\uD83D\uDED2 데이터 분석의 핵심 도구인 장바구니 분석의 개념과 지표(지지도, 신뢰도, 향상도)를 쉽고 명확하게 설명하여 비즈니스 인사이트 도출 방법을 제시하는 실무자의 깊이 있는 분석 가이드!"},{제목:"슬랙 봇으로 커뮤너티 활성화하기(with CRM  메시지, 마인크래프트)",주소:"https://snowgot.tistory.com/169",작가:"임정",설명:"\uD83E\uDD16 슬랙 봇으로 커뮤니티 활성화의 A to Z! 개발자 글쓰기 모임 글또에서 CRM 메시지와 마인크래프트 출석 봇을 통해 참여자들의 engagement를 높이고 재미있는 커뮤니케이션 방법을 소개합니다."}],Fullstack:[{제목:"NGINX에서 JavaScript로 확장하기",주소:"https://medium.com/@sudosubin/nginx에서-javascript로-확장하기-5329b3dcfd78",작가:"김수빈",설명:"\uD83D\uDCA1 NGINX에서 JavaScript로 확장하는 방법과 Slack Webhook Verifier 구현 사례를 통해, 기존 Lua 대신 친숙한 JavaScript로 서버 확장성과 보안성을 높일 수 있는 실용적인 기술을 배워보세요."},{제목:"[GTM] 클릭 이벤트를 GA로 보내는 깔끔한 방법",주소:"https://springfall.cc/article/2025-01/ga",작가:"김태훈",설명:"\uD83D\uDCCA GTM과 GA를 활용한 웹 분석 방법을 쉽게 배울 수 있는 글로, GA의 클릭 이벤트 추적 설정을 깔끔하게 구현하는 방법을 상세히 설명합니다."},{제목:"Kotlin Script 활용하기",주소:"https://kciter.so/posts/using-kotlin-script/",작가:"이선협",설명:"\uD83C\uDF08 Kotlin Script는 JVM 환경에서 스크립트 언어처럼 사용할 수 있는 실험적인 기술로, Kotlin 생태계 내에서 CLI 스크립트, 간단한 도구 개발, 런타임 스크립팅 등 다양한 활용 가능성을 제공하는 흥미로운 기술입니다."}],Frontend:[{제목:"시간 측정의 역사와 자바스크립트의 시간(Date)",주소:"https://blog.sjoleee.info/posts/date",작가:"이상조",설명:"\uD83D\uDD70️ 시간 측정의 역사와 자바스크립트의 복잡한 시간 처리 메커니즘을 쉽고 재미있게 풀어내며, 실제 개발 현장에서 발생할 수 있는 시간대 관련 버그와 해결 방법을 생생하게 소개하는 글입니다!"},{제목:"⚡️ 웹 애니메이션에서 Reflow를 제거하고 렌더링 성능을 최적화하기",주소:"https://sungpaks.github.io/chrome-extension-performance-optimization/",작가:"조성훈",설명:"⚡️ 웹 애니메이션의 렌더링 성능을 획기적으로 최적화하는 transform 활용 방법을 소개합니다! 브라우저의 Layout 단계를 완전히 우회하여 17.5%의 성능 개선을 달성한 실전 최적화 가이드입니다."},{제목:"탐구의 기술 - with문에 대한 문장 하나에서 MDN에 기여하고 논문을 읽어보기까지",주소:"https://witch.work/ko/posts/javascript-dance-with-with-statement",작가:"김성현",설명:"\uD83E\uDDD0 JavaScript의 오래된 `with` 문법에서 시작해 MDN 문서 번역, 원문 기여, 논문 탐구까지 이어지는 기술 탐구의 흥미로운 여정과 지식 연결의 매력을 보여주는 글로, 개발자의 호기심과 탐구 정신을 배울 수 있는 흥미로운 기술 성장 이야기입니다."}],Backend:[{제목:"100$ 이상의 클라우드 비용을 7$ 미만으로 줄이게 된 이야기",주소:"https://codediary21.tistory.com/159",작가:"이용선",설명:"\uD83D\uDCB8 비영리 기업의 극한 비용 최적화 전략을 통해 실제 개발 현장의 창의적인 문제 해결 방법과 혁신적인 접근법을 배울 수 있는 실용적인 개발 사례 리포트!"},{제목:"파이썬에는 오버로딩이 없다고요?",주소:"https://blog.s3ich4n.me/devlog/python/2025-02-02-python-and-overloading",작가:"유성은",설명:"\uD83D\uDC0D 파이썬의 오버로딩 대체 방안과 타입 힌팅을 통한 코드 안정성 확보 방법을 소개한 글로, 덕 타이핑과 구조적 타이핑의 특성을 활용해 타입 체크를 강화하는 실용적인 해결책을 제시합니다."},{제목:"Python set의 순서는 어떻게 정해질까? CPython 구현으로 알아보는 해시 테이블 동작 원리",주소:"https://chinensis.tistory.com/entry/Python-set%EC%9D%98-%EC%88%9C%EC%84%9C%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%A0%95%ED%95%B4%EC%A7%88%EA%B9%8C-CPython-%EA%B5%AC%ED%98%84%EC%9C%BC%EB%A1%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EB%8A%94-%ED%95%B4%EC%8B%9C-%ED%85%8C%EC%9D%B4%EB%B8%94-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC",작가:"이승민b",설명:"\uD83C\uDFB2 파이썬 set의 내부 해시 테이블 동작 원리를 깊이 있게 탐구하며, 해시 충돌 해결 전략과 데이터 저장 순서의 비밀을 파헤치는 흥미로운 기술 분석 글입니다."},{제목:"이력서 피드백 받은 것을 기반으로 고쳐보기 1차(feat. 이력서 쓰는 법)",주소:"https://velog.io/@prettylee620/%EC%9D%B4%EB%A0%A5%EC%84%9C-%ED%94%BC%EB%93%9C%EB%B0%B1-%EB%B0%9B%EC%9D%80-%EA%B2%83%EC%9D%84-%EA%B8%B0%EB%B0%98%EC%9C%BC%EB%A1%9C-%EA%B3%A0%EC%B3%90%EB%B3%B4%EA%B8%B0-1%EC%B0%A8feat.-%EC%9D%B4%EB%A0%A5%EC%84%9C-%EC%93%B0%EB%8A%94-%EB%B2%95",작가:"이금주",설명:"\uD83D\uDCDD 개발자의 성장과 기록을 통해 효율과 가치를 만들어가는 이력서로, 기술적 여정과 협업 능력을 한눈에 볼 수 있는 나만의 기술 스토리북입니다."}],iOS:[{제목:"[Translation] iOS 앱에서 네트워크 상의 텍스트 다국어 지원하기 3️⃣ / 커스텀 환경에서 번역 제공하기",주소:"https://meenu.tistory.com/48",작가:"김민택",설명:"\uD83C\uDF10 iOS 앱에서 네트워크 텍스트의 다국어 지원을 위한 커스텀 환경 구현 방법을 상세히 설명하는 심도 있는 기술 가이드로, Swift 개발자들에게 실무에 바로 적용 가능한 실용적인 번역 솔루션을 제공합니다."}]},"9th":{PMPO:[{제목:"조직문화를 바꾸는 힘, <리더의 돕는 법> 서평",주소:"https://blog.naver.com/khun-/223754418099",작가:"최병훈",설명:"\uD83D\uDCDA 리더십의 새로운 관점을 제시하는 <리더의 돕는 법>은 '도움'이라는 행위가 조직 문화와 팀워크의 핵심임을 강조하며, 위상 차이를 인정하고 겸손한 질문으로 접근하는 리더의 돕는 기술을 통해 진정한 변화를 이끌어낼 수 있다고 소개합니다."}],Frontend:[{제목:"프론트&모바일 반상회 참여 회고",주소:"https://blog.huns.site/blog/posts/personal/diary/geultto-10th-village-neighborhood-meeting",작가:"박승훈",설명:"\uD83E\uDD1D 개발자들의 성장과 네트워킹을 위한 글또 커뮤니티의 생생한 후기와 인사이트를 통해 개발 커뮤니티의 힘과 협업의 가치를 배울 수 있는 감동적인 회고 글입니다."},{제목:"TanStack Query, 왜 필요할까? 내부 원리를 파헤치고 직접 만들어보기",주소:"https://www.reese-log.com/tanstack-query-internals-and-implementation",작가:"안예지",설명:"\uD83C\uDF1F TanStack Query의 내부 원리와 직접 구현을 통해 비동기 상태 관리의 핵심을 이해할 수 있는 글입니다. Race Condition 방지, 중복 요청 처리, 캐싱 등 실제 개발에서 마주치는 문제들의 해결 방법을 상세히 설명하고 있어, 라이브러리를 더 효과적으로 활용하고자 하는 개발자에게 추천합니다."},{제목:"에셋 이미지의 동적 로드와 빌드 최적화",주소:"https://mong-blog.tistory.com/entry/%EC%97%90%EC%85%8B-%EC%9D%B4%EB%AF%B8%EC%A7%80%EC%9D%98-%EB%8F%99%EC%A0%81-%EB%A1%9C%EB%93%9C%EC%99%80-%EB%B9%8C%EB%93%9C-%EC%B5%9C%EC%A0%81%ED%99%94",작가:"금정민",설명:"\uD83D\uDCE6 웹 애플리케이션의 성능을 높이는 에셋 동적 로드 최적화 방법을 소개합니다! 불필요한 이미지 번들링을 줄이고 효율적인 리소스 관리 전략을 배울 수 있는 핵심 가이드입니다."},{제목:"ESLint는 어떻게 코드를 분석할까요?",주소:"https://1lsang.vercel.app/posts/eslint-01",작가:"박일상",설명:"\uD83E\uDDD0 ESLint의 코드 분석 과정과 동작 원리를 이해하고 싶다면, Parser를 통한 AST 생성부터 Rule 적용, 결과 출력까지의 단계별 작동 방식을 상세히 설명한 이 글을 추천합니다."},{제목:"위성 궤도 데이터(TLE) 정규 표현식으로 유효성 검증하기",주소:"https://velog.io/@sprare06/%EC%9C%84%EC%84%B1-%EA%B6%A4%EB%8F%84-%EB%8D%B0%EC%9D%B4%ED%84%B0TLE-%EC%A0%95%EA%B7%9C-%ED%91%9C%ED%98%84%EC%8B%9D%EC%9C%BC%EB%A1%9C-%EC%9C%A0%ED%9A%A8%EC%84%B1-%EA%B2%80%EC%A6%9D%ED%95%98%EA%B8%B0",작가:"박지윤",설명:"\uD83D\uDEF0️ 위성 궤도 데이터(TLE)의 복잡한 구조와 유효성 검증 방법을 정규 표현식으로 쉽고 명확하게 설명하여, 우주 데이터 분석에 관심 있는 개발자와 과학 기술 enthusiast들에게 꼭 읽어볼 만한 심도 있는 기술 가이드입니다."}],Backend:[{제목:"제네릭이 작동하지 않는다",주소:"https://imksh.com/133",작가:"강승현",설명:"\uD83D\uDD0D 제네릭과 다형성의 충돌 문제를 해결하며 유연한 설계를 고민해볼 수 있는 글로, Spring Boot에서 타입 기반 매칭을 활용하거나 유지보수성 높은 코드 구조에 관심 있는 개발자에게 추천합니다."},{제목:"문자 인코딩의 역사를 알아보자",주소:"https://www.romedev.me/post/incoding_history",작가:"임원기",설명:"\uD83C\uDF10 문자 인코딩의 역사를 통해 인류의 소통 방식 진화와 디지털 시대의 문자 표준화 과정을 알아보는 흥미로운 기술 여정을 소개합니다!"},{제목:"Go에서 메모리 할당 없이 문자열 빠르게 변환하기",주소:"https://www.winterjung.dev/zero-allocation-string-and-bytes-conversion-in-go/",작가:"정겨울",설명:"\uD83D\uDE80 Go에서 메모리 할당 없이 문자열을 빠르게 변환하는 방법을 소개합니다. 성능 최적화와 메모리 효율성을 높이고 싶은 개발자들에게 유용한 unsafe 패키지 기법을 알려드립니다."},{제목:"ANN을 이용한 벡터 유사도 검색",주소:"https://velog.io/@jghff700/ANN%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EB%B2%A1%ED%84%B0-%EC%9C%A0%EC%82%AC%EB%8F%84-%EA%B2%80%EC%83%89",작가:"장영환",설명:"\uD83D\uDCCD 벡터 유사도 검색의 최적화 방법을 PCA와 LSH를 통해 상세히 설명한 글로, 대규모 데이터 환경에서 검색 성능을 향상시키는 방법을 코드와 함께 실용적으로 소개하고 있어 검색 시스템 구현에 관심 있는 개발자들에게 추천합니다."},{제목:"API 요청 당 쿼리 개수를 알고 싶어 라이브러리까지 만든 이야기 — 라이브러리 제작",주소:"https://medium.com/@hyeon9mak/api-%EC%9A%94%EC%B2%AD-%EB%8B%B9-%EC%BF%BC%EB%A6%AC-%EA%B0%9C%EC%88%98%EB%A5%BC-%EC%95%8C%EA%B3%A0-%EC%8B%B6%EC%96%B4-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%EA%B9%8C%EC%A7%80-%EB%A7%8C%EB%93%A0-%EC%9D%B4%EC%95%BC%EA%B8%B0-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%A0%9C%EC%9E%91-de39f0d27351",작가:"최현구",설명:"\uD83D\uDD75️ API 요청 당 쿼리 개수를 자동으로 측정하고 로깅하는 라이브러리를 직접 개발하여, 개발자들이 쉽게 성능 병목 지점을 파악할 수 있도록 도와주는 혁신적인 오픈소스 라이브러리 제작 이야기입니다."}],AIML:[{제목:"Transformer, 도대체 그게 뭔데 - Transformer 편 (2)",주소:"https://login-data.tistory.com/36",작가:"곽승예",설명:"\uD83E\uDD16 트랜스포머 구조를 상세히 설명한 글로, 인코더의 출력을 활용해 자연스러운 문장을 생성하는 과정과 Masked Multi-Head Attention의 역할을 이해하기 쉽게 설명하여 트랜스포머 모델의 전체 구조를 파악하는데 도움이 되는 글입니다."}],Fullstack:[{제목:"Python으로 kubernetes 노드 선택 기능을 개발하는 방법",주소:"https://littlemobs.com/blog/kubernetes-node-selection-with-python/",작가:"김인호",설명:"\uD83D\uDD27 Python으로 Kubernetes 노드 선택 기능을 개발하는 방법을 배우며, Node Affinity와 Label을 활용해 특정 노드에만 pod를 배포하는 기능 구현과 실제 운영 시 고려해야 할 동기화, GC 등의 이슈를 상세히 다룬 실용적인 가이드입니다."}]},"10th":{Frontend:[{제목:"서버에서 내려주는 데이터를 얼마나 신뢰할 수 있을까요?",주소:"https://blog.sjoleee.info/posts/promi-safe",작가:"이상조",설명:"↔️ 서버와 클라이언트 간 타입 불일치 문제를 해결하고, 런타임 타입 검증의 중요성을 깊이 있게 탐구하여 개발자의 안전하고 신뢰할 수 있는 데이터 처리 방법을 제시하는 심도 있는 기술 가이드입니다."},{제목:"Vue 3 <script setup> 선언 순서를 자동 정렬하는 ESLint 룰 개발기",주소:"https://mong-blog.tistory.com/entry/Vue-3-script-setup-%EC%84%A0%EC%96%B8-%EC%88%9C%EC%84%9C%EB%A5%BC-%EC%9E%90%EB%8F%99-%EC%A0%95%EB%A0%AC%ED%95%98%EB%8A%94-ESLint-%EB%A3%B0-%EA%B0%9C%EB%B0%9C%EA%B8%B0",작가:"금정민",설명:"\uD83D\uDEE0️ Vue 3 개발자들을 위한 개발 기술 및 이야기를 다루는 블로그로, 테스트 코드 관리부터 성능 최적화까지 실용적인 개발 지식을 공유합니다."},{제목:"디자인시스템용 eslint custom plugin 만들기",주소:"https://velog.io/@devohda/%EB%94%94%EC%9E%90%EC%9D%B8%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9A%A9-eslint-custom-plugin-%EB%A7%8C%EB%93%A4%EA%B8%B0",작가:"오다혜",설명:"\uD83D\uDD27 디자인시스템의 안정성을 높이기 위해 Vue2와 Tailwind CSS 환경에서 발생하는 스타일 충돌 문제를 ESLint 커스텀 플러그인으로 해결한 경험을 공유하는 유익한 기술 블로그입니다."},{제목:"365일간, 매일 짧은 글쓰기를 하며 느낀점",주소:"https://velog.io/@byungsker/%EB%A7%A4%EC%9D%BC-%EC%A7%A7%EC%9D%80-%EA%B8%80%EC%93%B0%EA%B8%B0%EB%A5%BC-%EC%8B%9C%EC%9E%91%ED%95%9C%EC%A7%80-365%EC%9D%BC%EC%9D%B4-%EB%90%98%EC%97%88%EC%96%B4%EC%9A%94",작가:"이병우",설명:"\uD83C\uDF1F 매일 글쓰기 365일 챌린지를 통해 자기 성장과 습관 형성의 놀라운 여정을 배우고, 개인의 정체성과 관점을 명확히 발견할 수 있는 감동적인 자기 최적화 이야기를 소개합니다!"}],Backend:[{제목:"모니터링 툴 씬의 맛없없 조합: Spring Boot Actuator X Prometheus X Grafana",주소:"https://justsora.tistory.com/185",작가:"김소라",설명:"\uD83D\uDDA5️ Spring Boot Actuator, Prometheus, Grafana를 활용한 서버 모니터링 실습 가이드 - 서버 모니터링을 처음 도입하려는 개발자에게 기본 개념부터 실제 구현, 응답시간 분석까지 단계별로 자세히 설명되어 있어 실무에 바로 적용 가능한 내용입니다."},{제목:"WebSocket RFC6455 분석 및 Wireshark로 보는 패킷 — Go(Gorilla)",주소:"https://medium.com/@arneg0shua/websocket-rfc6455-%EB%B6%84%EC%84%9D-%EB%B0%8F-wireshark%EB%A1%9C-%EB%B3%B4%EB%8A%94-%ED%8C%A8%ED%82%B7-go-gorilla-83f60f96046a",작가:"김정인",설명:"\uD83D\uDD0D WebSocket의 동작원리와 패킷 분석을 통해 네트워크 문제 해결 능력을 높일 수 있는 글로, Go Gorilla 라이브러리의 구현과 Wireshark를 통한 실제 패킷 분석 내용을 상세히 탐구하는 기술적 여정을 제공합니다."},{제목:"Fioneer : 금융 도메인 RAG LLM 제작기",주소:"https://velog.io/@jghff700/fioneer-rag-llm",작가:"장영환",설명:"\uD83D\uDCB0 금융 도메인에 특화된 RAG LLM 서비스 구현 과정을 상세히 소개한 글로, 어닝콜 데이터를 활용해 애널리스트처럼 투자 정보와 의견을 제공하는 방법을 배울 수 있습니다."}],PMPO:[{제목:"구글 폼을 자동화하면서 배운 것들: 정규표현식, Prefill, Apps Script 활용기",주소:"https://blog.naver.com/khun-/223767959437",작가:"최병훈",설명:"\uD83D\uDCD1 구글 폼 자동화를 위한 정규표현식, Prefill, Apps Script 활용법을 상세히 다룬 글로, 입력 오류 방지와 응답 관리의 효율성을 높이기 위한 실용적인 해결책을 제시하여 업무 자동화에 관심 있는 분들에게 추천합니다."}],iOS:[{제목:"소프트웨어 개발로 보는 신뢰와 효율의 상관관계",주소:"https://medium.com/@radiantchoi/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EA%B0%9C%EB%B0%9C%EB%A1%9C-%EB%B3%B4%EB%8A%94-%EC%8B%A0%EB%A2%B0%EC%99%80-%ED%9A%A8%EC%9C%A8%EC%9D%98-%EC%83%81%EA%B4%80%EA%B4%80%EA%B3%84-39dd2652e5c9",작가:"최경민",설명:"\uD83D\uDCBB 소프트웨어 개발에서 신뢰성과 효율성의 관계를 설명하며, 작은 코드 조각부터 시작해 신뢰할 수 있는 구조를 만들어가는 방법을 제시하는 통찰력 있는 글입니다."},{제목:"[Concurrency] Task 톺아보기",주소:"https://develop-ssooo.tistory.com/220",작가:"김소진",설명:"\uD83D\uDCF1 Swift Concurrency의 핵심 Task를 초급~중급 iOS 개발자를 위해 쉽고 상세하게 설명하는 글로, 비동기 작업의 효율적인 관리와 실행 방법을 배울 수 있는 실용적인 가이드입니다."}],Data:[{제목:"맛과 건강을 모두 잡은 가심비 케이크 찾기 프로젝트",주소:"https://sooyeon.tistory.com/261",작가:"김수연a",설명:"\uD83C\uDF70 케이크 러버가 건강과 맛을 모두 잡기 위해 7개 프랜차이즈 101개 케이크를 분석해 가장 건강한 케이크를 찾아낸 프로젝트로, 최적의 케이크를 찾아낸 데이터 분석 리포트를 소개합니다."}],Fullstack:[{제목:"코딩 테스트 준비 전 모르면 큰일나는 알고리즘 문제 유형 파악 및 꿀팁 정리",주소:"https://littlemobs.com/blog/coding-test-algorithms-top-down-overview/",작가:"김인호",설명:"\uD83C\uDFAF 코딩 테스트 준비의 핵심을 한 눈에! 알고리즘 문제 유형 파악과 효율적인 학습 전략으로 합격의 지름길을 안내하는 실전 가이드북"}]}}};var r=o(7686);let s=JSON.parse('[{"round":"1st","category":"PMPO","author":"임지환","originalTitle":"끝맺음을 잘하자 (글또 다짐)","originalDescription":"\uD83D\uDE80 끝맺음의 중요성을 강조하며, 대목표와 소목표 설정, 수치화, 그리고 커뮤니티와 함께 성장하는 전략적인 자기계발 접근법을 제시합니다.","url":"https://habwa.tistory.com/entry/%EB%81%9D%EB%A7%BA%EC%9D%8C%EC%9D%84-%EC%9E%98%ED%95%98%EC%9E%90-%EA%B8%80%EB%98%90-%EB%8B%A4%EC%A7%90","ogTitle":"끝맺음을 잘하자 (글또 다짐)","ogDescription":"글또 OT 중에 성윤님이 \\"끝이 있어 달릴 수 있다.\\"라는 말씀을 하셨다. 사실 나도 끝의 존재를 중요하게 생각하는 편이라서 내가 생각하는 끝을 말하고 자연스럽게 글또에서의 다짐도 다루어볼까 한다.\xa0\xa0끝에 대한 생각, 끝맺음\xa0대부분의 사람들은 다짐을 하기 전에 \'끝\'의 존재를 무시한 채 시작한다. 실제로 우리는 연초에 다이어트, 영어 공부를 수도 없이 시도한다. 시작을 결정하고 준비하기 위해서 학원이나 헬스장을 등록한다. 다이어리를 사서 계획표를 세우고 알람을 맞추기도 한다. 이렇게 시작에는 많은 시간과 돈을 투자하며, 결정을 내리는 데에도 상당한 기회비용을 들인다. \'시작이 반이다.\'라는 말이 있듯이 많은 사람들은 시작에 많은 집중을 한다.\xa0\xa0하지만, 연말이라는 끝에서는 내가 연초 대비 몇 kg를 뺐고..","ogImage":"https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FYwdeU%2FbtsJRciVtgi%2FIND54Qkhvj2iV4QWRvpIX0%2Fimg.png"},{"round":"1st","category":"PMPO","author":"신지혜","originalTitle":"침대 위에서 눈물을 훔치며 본 내동생 결혼식","originalDescription":"\uD83D\uDC70 언택트 시대의 혁신적인 결혼식 경험을 UX 관점에서 생생하게 풀어낸 감동적이고 실용적인 온라인 결혼식 이야기!","url":"https://brunch.co.kr/@smol/13","ogTitle":"침대 위에서 눈물을 훔치며 본 내동생 결혼식","ogDescription":"언택트시대 온라인 결혼식 UX관점으로 바라보기 | \\"언니 나 결혼해!\\"   미국에 사는 사촌동생이 결혼한다는 기쁜 소식을 알려왔다. 때는 바야흐로 2020년 1월. 우리 모두가 아는 블록버스터급 재난 영화같은 코로나가 발생했던 그때였다. 사실 2월 초까지만 해도 코로나를 곧 사라질 전염병 정도로 가볍게 여겼다. 나 역시도 동생을 축하하기 위해 8월에는 미국으로 날아갈 생각에 들떠있었다.   하지만 모두의 ","ogImage":"https://img1.daumcdn.net/thumb/R1280x0/?fname=http://t1.daumcdn.net/brunch/service/user/4nUc/image/Gs4SEz71duo8cZY29yFnnLM5-zQ.jpg"},{"round":"1st","category":"Frontend","author":"정현수","originalTitle":"당근 테크밋업 발표를 하고 (발표를 앞둔 모든 분께)","originalDescription":"\uD83C\uDFA4 발표 준비부터 실전까지의 상세한 노하우를 담은 실용적인 글로, 발표를 앞둔 사람들에게 장표 제작, 발표 기법, 마인드셋까지 종합적인 인사이트를 제공합니다.","url":"https://junghyeonsu.com/posts/daangn-tech-meetup-retrospect/","ogTitle":"당근 테크밋업 발표를 하고 (발표를 앞둔 모든 분께) - 정현수 기술 블로그","ogDescription":"당근 테크밋업 \\"아이콘, 브랜딩 에셋까지 디자인시스템으로\\" 발표하고 나서 배운 점과 발표를 앞둔 사람들에게","ogImage":"https://junghyeonsu.com/static/418eacd16118869a71ba2b2412e31018/2c808/cover.png"},{"round":"1st","category":"Frontend","author":"박경원","originalTitle":"Web Workers, AI 모델을 브라우저의 백그라운드에서 실행하면 앱 성능이 좋아질까?","originalDescription":"\uD83D\uDE80 AI 모델의 백그라운드 실행의 장단점을 실험적으로 탐구하며, 실시간 이미지 추론에서는 메인 스레드가 더 효율적일 수 있음을 깨달은 인사이트 있는 글입니다.","url":"https://pkw-may.tistory.com/65","ogTitle":"[Web Workers] AI 모델을 브라우저의 백그라운드에서 실행하면 앱 성능이 좋아질까?","ogDescription":"TL; DR브라우저의 Web Workers API를 이용해백그라운드에서 Google의\\u001cMediaPipe 비전 AI 모델을 로드/초기화/추론을 진행하고추론의 결과값을 UI에 실시간으로 표시하는 경우,메인 스레드에서 AI 모델 로드/초기화/추론을 진행한 것보다FPS가 감소하고,추론 소요 시간이 증가한다.(원인은 본문에서 알아본다)이 때문에비전 AI 모델을 활용하며,이미지 추론이 실시간으로 이뤄져야하고,그 추론의 결과 값이 UI에 또 실시간으로 반영되어야 하는 경우브라우저의 백그라운드에서 AI 모델 연산을 실행하는 것은 적합하지 않을 수 있다.그러나,브라우저의 백그라운드에서 AI 모델 연산을 실행하는 것이메인 스레드의 과부하를 감소시키는 데 도움이 되므로,상황에 따라 실행 위치를 적절히 결정해야 한다.\xa0이 글..","ogImage":"https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F56Qdg%2FbtsJTflMPDl%2FyJQrK0rSqNDqddTDxm3or1%2Fimg.gif"},{"round":"1st","category":"Frontend","author":"조예진","originalTitle":"함수는 어디까지 접근 가능한가? - Closure와 this 이해하기","originalDescription":"\uD83E\uDDE0 자바스크립트의 스코프, 클로저, this의 동작 원리를 깊이 있게 이해할 수 있는 심도 있는 기술 블로그 포스트로, 개발자의 JavaScript 기본기를 탄탄하게 다질 수 있는 글입니다.","url":"https://www.oooooroblog.com/posts/90-js-this-closure","ogTitle":"함수는 어디까지 접근 가능한가? - Closure와 this 이해하기","ogDescription":"함수는 여러가지 변수를 참조하며 그 역할을 수행합니다. 그런데 함수는 함수 밖의 변수를 어디까지 참조할 수 있을까요? 이 글에서는 스코프와 실행 컨텍스트의 관점에서 Closure와 this에 대해 알아봅니다.","ogImage":null},{"round":"1st","category":"Frontend","author":"강주혁","originalTitle":"Shadow DOM으로 스타일 충돌 해결하기","originalDescription":"\uD83C\uDFA8 웹 컴포넌트의 스타일 격리를 위한 Shadow DOM의 개념과 활용법을 명확하게 설명한 유용한 글입니다.","url":"https://kangju.dev/posts/solving-style-conflicts-with-shadow-dom","ogTitle":"Shadow DOM으로 스타일 충돌 해결하기 | kangju.dev","ogDescription":"또 !important 쓰려고요? Shadow DOM을 써보세요","ogImage":"https://kangju.dev/posts/solving-style-conflicts-with-shadow-dom/thumbnail.png"},{"round":"1st","category":"Backend","author":"박세진a","originalTitle":"Redis의 Increment는 왜 원자적으로 동작하는 것일까?","originalDescription":"\uD83D\uDD0D Redis의 INCR 명령어가 원자적으로 동작하는 원리를 깊이 있게 탐구하여, 동시성 제어의 내부 메커니즘을 명확히 이해할 수 있는 기술 블로그 포스팅입니다.","url":"https://strong-park.tistory.com/entry/Redis%EC%9D%98-Increment%EB%8A%94-%EC%99%9C-%EC%9B%90%EC%9E%90%EC%A0%81%EC%9C%BC%EB%A1%9C-%EB%8F%99%EC%9E%91%ED%95%98%EB%8A%94-%EA%B2%83%EC%9D%BC%EA%B9%8C","ogTitle":"Redis의 Increment는 왜 원자적으로 동작하는 것일까?","ogDescription":"저는 Redis가 싱글 스레드로 동작하는데도 불구하고, 특정 명령어를 사용할때\xa0동시성 제어가 필요있고 없고의 차이점에 명확하게 아하! 모먼트를 가질 수는 없었습니다. 이러한 고민을 해결하기 위해 Redis 명령어들이 어떻게 동작하는지 살펴보았습니다. 이번 포스팅에서는 이 주제에 대해 알아보고자 합니다.\xa0\uD83D\uDCCC 왜 GET과 SET을 같이 사용하는 것은 동시성 이슈가 발생할까?Spring Boot 프로젝트에서 Redis를 사용하다 보면, GET과 SET 명령어를 함께 사용할 때 동시성 이슈가 발생하는 경우가 있습니다. 그 이유는 Redis는 멀티플렉싱 I/O를 활용하여 여러 요청을 받으면서, 실제 요청들은 싱글 스레드로 순차적으로 처리하기 때문입니다.참고: 아래 예시에서는 GET 대신 SCARD를, SET 대..","ogImage":"https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb3H4QC%2FbtsJ3N2HT1g%2FHbTLceCIYX16hpSk61NFv1%2Fimg.png"},{"round":"1st","category":"Backend","author":"황진성","originalTitle":"계약에 의한 설계(Design by Contract)를 실전에 적용하기","originalDescription":"\uD83D\uDCDD 계약에 의한 설계(Design by Contract)의 핵심 개념과 실전 적용 방법을 상세히 설명한 유익한 기술 문서입니다.","url":"https://jinseong-dev.tistory.com/49","ogTitle":"계약에 의한 설계(Design by Contract)를 실전에 적용하기","ogDescription":"퇴근길, 지하철을 타고 집으로 향하던 중 문득 이런 생각이 스쳤다.지하철은 나를 안전하게, 정해진 시간 안에, 내가 원하는 역까지 데려다줄 것이다.지하철 기관사는 성실하게 그 임무를 수행할 것이다.개찰구에 카드를 태그 하면 결제가 완료되고 문이 열릴 것이다.운행 시간이 지나면 지하철을 이용할 수 없을 것이다.이 모든 것은 사회 속에서 정해진 규칙 덕분에 자연스럽게 이루어지는 일들이다. 우리는 그 규칙들을 믿고 다양한 서비스를 사용하며, 그 규칙이 지켜질 것이라는 전제 아래 다른 사람들과 협력하고 살아간다. 소프트웨어 세계에서도 이런 규칙을 적용할 수 있다. 바로 “계약에 의한 설계(Design by Contract)“라는 프로그래밍 패러다임이 그렇다. 이번 글에서는 이 패러다임이 소프트웨어에서 어떻게 작..","ogImage":"https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fsq2ii%2FbtsJ28tKiKt%2FmyKPXUpC3VpRkrz2PFmaZk%2Fimg.png"},{"round":"1st","category":"Backend","author":"이종은","originalTitle":"스트림은 느긋하고 싶다","originalDescription":"\uD83C\uDFAF Stream의 지연 연산 특성을 이해하고 성능 최적화를 위한 핵심 메커니즘을 학습할 수 있는 깊이 있는 기술 가이드입니다.","url":"https://yatta.tistory.com/10","ogTitle":"스트림은 느긋하고 싶다","ogDescription":"Stream API는 2014년 Java8과 함께 혜성처럼 등장했습니다. ☄️그리고 현재까지 자바 개발자들의 사랑을 듬뿍 받고 있죠. 스트림은 병렬처리, 무한 데이터 등 많은 것을 지원해줍니다. 하지만 누군가가 그 중 꼭 알아야 할 스트림의 특징이 뭐야?라고 묻는다면 전 딱 이렇게 말할 것 같습니다. 스트림은 느긋하다고.\xa0Streams are lazy. computation on the source data is only performed when the terminal operation is initiated, and source elements are consumed only as needed.\xa0purpose지연 연산의 특징을 알아보고 Stream의 동작 방식에 대해 이해합니다.\xa0\xa0어느날, 개발자 A..","ogImage":"https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FFj537%2FbtsJ3XY3syj%2FyF1Ak00sxHMvu3zVp5Ho61%2Fimg.jpg"},{"round":"1st","category":"Data","author":"최세연","originalTitle":"Airflow를 활용해서 API로 데이터 수집하기","originalDescription":"\uD83D\uDD04 Airflow를 활용한 API 데이터 수집의 체계적이고 효율적인 접근 방법을 상세히 설명하는 기술 블로그로, 비동기 처리, 세마포어, 오류 관리 등 실무에 바로 적용 가능한 인사이트를 제공합니다.","url":"https://velog.io/@chltpdus48/Airflow%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%B4%EC%84%9C-API%EB%A1%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%88%98%EC%A7%91%ED%95%98%EA%B8%B0","ogTitle":"Airflow를 활용해서 API로 데이터 수집하기","ogDescription":"오픈 API나 크롤링을 통해 데이터를 수집한다면 어떻게 해야할까?그냥 무작정 크롤링 하는 코드만 있으면 될까?오픈 API나 크롤링을 통해 데이터를 수집할 때, 단순히 코드 작성만으로는 관리와 유지보수가 어려워진다. 특히 외부 요인에 대한 의존성이 크므로, 전체 프로세스","ogImage":"https://velog.velcdn.com/images/chltpdus48/post/ebe7574e-5669-494c-8cb9-0c7bbb85747d/image.png"},{"round":"1st","category":"Data","author":"이소희a","originalTitle":"마이크로소프트 연구원이 말하는 AI에 대한 치명적 착각","originalDescription":"\uD83E\uDD16 AI의 기술적, 사회적 영향을 깊이 있게 탐구하며, 마이크로소프트 연구원의 비판적 시각으로 AI의 숨겨진 위험성과 윤리적 문제를 통찰력 있게 분석한 책입니다.","url":"https://brunch.co.kr/@hnote/154","ogTitle":"마이크로소프트 연구원이 말하는 AI에 대한 치명적 착각","ogDescription":"그는 왜 AI를 비판하는가, 케이트 크로퍼드의「AI 지도책」 | 꽤 긴 기간 동안 북클럽 책들만 읽어오다가 오랜만에 직접 책을 골라 읽었다. 요즘\xa0독서생활에 한 발짝의 자유나 한 틈의 여유도 없었다.\xa0독서로 한가로이 보내던 오전 시간에 요새 강의를 듣고 있다 보니 독서를 하고 싶다는 마음만큼 시간을 내기가 어려웠다. 어느 날\xa0책꽂이를 보면서 화들짝 놀랐다.\xa0어느새 관심도 없는 책들만이 줄줄 꽂혀있었다.\xa0내 것이라고 인정","ogImage":"https://img1.daumcdn.net/thumb/R1280x0/?fname=http://t1.daumcdn.net/brunch/service/user/9KD2/image/sxT7lR4j9bXQom85zOQFJa_X7p0.png"},{"round":"1st","category":"Fullstack","author":"이선협","originalTitle":"소프트웨어 파괴의 미학","originalDescription":"\uD83C\uDFAF 소프트웨어 개발에서 불가피한 코드 파괴를 받아들이고, 변화에 유연하게 대응할 수 있는 혁신적인 개발 철학을 제시하는 깊이 있는 기술 에세이입니다.","url":"https://kciter.so/posts/the-aesthetics-of-destroying-software/","ogTitle":"소프트웨어 파괴의 미학","ogDescription":"새는 알에서 나오기 위해 투쟁한다. 알은 세계이다. 태어나려고 하는 자는 누구든 하나의 세계를 파괴하지 않으면 안된다. - 헤르만 헤세, 데미안 소프트웨어 개발은 많은 부분이 애매모호하다라는 생각을 해본적이 있는가? 무엇을 만들어야 하는지, 어떤…","ogImage":"https://kciter.so/images/2024-10-12-the-aesthetics-of-destroying-software/thumbnail.png"},{"round":"1st","category":"Fullstack","author":"김수빈","originalTitle":"사라진 Python 웹 프레임워크의 Redis Cluster 캐시 구현체","originalDescription":"\uD83D\uDCA1 Redis Cluster 지원이 부족한 Python 웹 프레임워크에서 Django와 FastAPI를 위한 맞춤형 캐시 백엔드를 직접 구현하여 성능과 안정성을 높인 혁신적인 기술 접근 사례","url":"https://medium.com/@sudosubin/%EC%82%AC%EB%9D%BC%EC%A7%84-python-%EC%9B%B9-%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC%EC%9D%98-redis-cluster-%EC%BA%90%EC%8B%9C-%EA%B5%AC%ED%98%84%EC%B2%B4-8439a473e16b","ogTitle":"사라진 Python 웹 프레임워크의 Redis Cluster 캐시 구현체","ogDescription":"백엔드 개발을 하다 보면 캐시를 붙이게 되는 경우가 생긴다. 트래픽이 늘어날수록, DB 접근이 많아질수록, 외부 시스템 요청 등의 I/O가 늘어날수록 성능과 비용을 개선하기 위해 캐시를 도입하게 된다.","ogImage":"https://miro.medium.com/v2/resize:fit:1200/1*EBBNK5KuCE641cux6rBCoA.png"},{"round":"1st","category":"Fullstack","author":"서현석","originalTitle":"랭체인v0.3 하이퍼클로바x 연동하기","originalDescription":"\uD83D\uDD27 랭체인 v0.3과 하이퍼클로바X를 커스텀 모델로 연동하고, 배치 처리를 통한 성능 개선 사례를 제시하여, AI 개발자들에게 실용적인 가이드를 제공합니다.","url":"https://chucoding.tistory.com/149","ogTitle":"랭체인v0.3 하이퍼클로바x 연동하기","ogDescription":"AI 업계에서 일하고 계신 분들이라면 랭체인(LangChain)이라는 단어가 낯설지 않을 텐데요. 요즘은 개발자부터 MLOps 엔지니어까지 여러 다양한 직군의 채용공고만 보아도 랭체인이라는 단어가 심심치 않게 등장하고 있습니다. 그만큼 랭체인은 AI 서비스를 개발하는 데 있어 중요한 프레임워크로 빠르게 자리 잡아가고 있는 것 같습니다.\xa0랭체인의 장점은 모듈화 된 구조로 인해 모델과 프롬프트를 자유자재로 교체해서 사용할 수 있다는 점과 배치 처리, 비동기호출 같은 다양한 함수들을 활용하여 답변을 생성할 수 있기 때문에 백엔드 개발에 필요한 여러 많은 작업들을 최소화시켜준다는 점입니다.\xa0특히, 많은 사람들이 사용하고 있는 클로드나 GPT 같은 저명한 오픈소스 모델 연동 모듈은 랭체인 커뮤니티에서 써드파티 라..","ogImage":"https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FnuyKM%2FbtsJ4RKz7N2%2FqICwUXxuvBoRc70YK58l2K%2Fimg.png"},{"round":"2nd","category":"PMPO","author":"임지환","originalTitle":"SEO (검색 엔진 최적화) 24년 버전 BERT를 곁들인","originalDescription":"\uD83D\uDD0D SEO의 9가지 핵심 요소를 체계적으로 정리하고 BERT를 고려한 자연스러운 콘텐츠 작성법까지 상세히 설명한 유익한 글로, 웹사이트 최적화를 위한 실용적인 가이드라인을 제공합니다.","url":"https://habwa.tistory.com/entry/SEO-%EA%B2%80%EC%83%89-%EC%97%94%EC%A7%84-%EC%B5%9C%EC%A0%81%ED%99%94-24%EB%85%84-%EB%B2%84%EC%A0%84BERT%EB%A5%BC-%EA%B3%81%EB%93%A4%EC%9D%B8","ogTitle":"SEO (검색 엔진 최적화) 24년 버전_BERT를 곁들인","ogDescription":"\\"SEO (Search Engine Optimization)는 고객한테 보이는 실질적인 첫인상이다.\\"\xa0\xa0SEO의 중요성을 말하기 전에 내가 꼭 짚고 가는 포인트이다. 많은 사람들이 웹사이트를 배포하면 웹사이트의 랜딩 페이지가 고객의 첫 방문이자 인상이라고 생각한다. 하지만, 정확한 시간, 물리적 순서상으로는 구글, 네이버의 검색 결과나 SNS에서 전달되는 URL이 웹사이트의 첫인상이다.\xa0\xa0\xa0위와 같이 고객이 URL에 다이렉트로 들어가지 않는 이상 구글이나 네이버 같은 검색 플랫폼에서 검색한다. 이때, 웹사이트에 대한 설명이 부족하거나 없다면 스캠성(사기) 웹사이트로 간주되어 정상적인 유입을 기대할 수 없다.\xa0\xa0\xa0마찬가지로, 위 사진처럼 카카오톡으로 받은 트립닷컴에 대한 설명과 썸네일이 정상적이면 괜찮다...","ogImage":"https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F7mHGd%2FbtsKbG4XNGT%2F1PLgEyEJSZRfd8mz3xo7lK%2Fimg.png"},{"round":"2nd","category":"Frontend","author":"금정민","originalTitle":"모바일에서 연속 입력시 값이 무시되는 이유(feat. click, touch, pointer event)","originalDescription":"\uD83D\uDCF1 모바일 환경에서 이벤트 처리의 미묘한 차이를 이해하고, touchend나 pointerup 같은 대안적 이벤트로 사용자 경험을 개선할 수 있는 통찰력 있는 글!","url":"https://mong-blog.tistory.com/entry/%EB%AA%A8%EB%B0%94%EC%9D%BC%EC%97%90%EC%84%9C-%EC%97%B0%EC%86%8D-%EC%9E%85%EB%A0%A5%EC%8B%9C-%EA%B0%92%EC%9D%B4-%EB%AC%B4%EC%8B%9C%EB%90%98%EB%8A%94-%EC%9D%B4%EC%9C%A0feat-touch-pointer-event","ogTitle":"모바일에서 연속 입력시 값이 무시되는 이유(feat. click, touch, pointer event)","ogDescription":"1. 들어가며현재 우리 서비스는 모바일 환경에서 가상 키패드를 제공하며, 가상 키패드는 click 이벤트로 입력을 처리하고 있다.그러나 특정 상황에서 키패드 입력이 누락되는 문제가 발생하고 있었다.이 문제는 사용자가 입력 버튼을 빠르게 번갈아가며 클릭할 때 발생했는데, 웹 환경에서는 문제가 없었지만, 모바일 환경에서만 이 문제가 나타났다.아래 gif는 문제를 재현한 모습이다. gif상 버튼이 가끔씩 눌리는 것처럼 보이지만, 실제로는 빠르게 번갈아가면서 누르고 있었다ㅎㅎ\xa0도대체 왜 모바일 환경에서만 입력 누락 문제가 발생하는 걸까?이번 시간에는 모바일 환경에서 연속 입력이 무시되는 이유와 click 이벤트와의 연관성을 살펴보겠다.이 글은 아래 목차 순서대로 진행된다.1.\xa0들어가며2.\xa0모바일\xa0환경에서\xa0연속\xa0..","ogImage":"https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FAM1h9%2FbtsKcgRNC52%2FTQZ0STzJKi7CMgbQWAkRe0%2Fimg.png"},{"round":"2nd","category":"Frontend","author":"김민지a","originalTitle":"JavaScript에서 이진 데이터 이해하기 - ArrayBuffer, TypedArray, Blob, File","originalDescription":"\uD83D\uDCA1 이진 데이터 처리를 위한 JavaScript의 다양한 타입(ArrayBuffer, TypedArray, Blob, File)을 상세히 설명하여 웹 개발자가 파일 처리와 데이터 조작에 필요한 핵심 개념을 이해하기 쉽게 정리한 유용한 글입니다.","url":"https://bichoninthefront.vercel.app/2024-jsBinaryDataTypes","ogTitle":"JavaScript에서 이진 데이터 이해하기 : ArrayBuffer, TypedArray, Blob, File | bichoninthefront","ogDescription":"Intro","ogImage":"https://bichoninthefront.vercel./img/docusaurus-social-card.jpg"},{"round":"2nd","category":"Backend","author":"박재온","originalTitle":"팩트체크와 나","originalDescription":"\uD83D\uDD75️ 정보의 정확성을 위해 끊임없이 오정보와 싸우는 저자의 열정과 노력을 담은 글로, 건전한 지식 생태계를 위한 중요한 메시지를 전달하고 있어 추천합니다.","url":"https://proofby.ac/misinformation/","ogTitle":"팩트체크와 나","ogDescription":"이 글은 내가 정보를 검증하고 지적하며 보낸 시간에 대한 것이고, 수많은 오정보들에 대한 감상문이다.","ogImage":"https://storage.proofby.ac/files/2023/02/----.png"},{"round":"2nd","category":"Backend","author":"강승현","originalTitle":"리더가 MSA 전환을 하자고 했다. 그리고 처참히 실패했다.","originalDescription":"\uD83E\uDD14 MSA 전환은 기술적 역량과 조직 문화 변화가 필수적이며, 실무진의 기술력과 경영진의 지원, 부서간 협력이 뒷받침되어야 성공할 수 있다는 현실적인 조언을 담은 글입니다.","url":"https://imksh.com/127#google_vignette","ogTitle":"리더가 MSA 전환을 하자고 했다. 그리고 처참히 실패했다.","ogDescription":"서론이 글은 리더, 경영진, 그리고 실무 개발자들을 대상으로 합니다. MSA 전환을 고려하거나 이미 추진 중인 조직의 이해관계자들이, 전환 과정에서 발생할 수 있는 문제와 그 해결 방안을 이해하는 데 도움이 되기를 기대합니다.\xa0마이크로서비스 아키텍처(MSA)는 현재 많은 조직에서 주니어 개발자 채용 공고에도 우대사항으로 언급될 만큼 널리 채택되고 있는 아키텍처 패턴입니다. 그러나 MSA 전환은 단순한 기술 도입 이상의 도전으로, 조직 내 모든 구성원의 협력과 상당한 노력이 필요합니다. 기술적인 변화를 성공적으로 이루기 위해서는 단순히 시스템 구조를 변경하는 것만으로는 충분하지 않습니다. 조직의 문화, 비즈니스 전략, 그리고 운영 모델 전반에 걸친 변화가 필요하며, 이러한 변화는 경영진의 확고한 의지와 실..","ogImage":"https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbe8RjT%2FbtsKHeFemyX%2FYsefbR5Ppd5Csx0XYso3Z0%2Fimg.jpg"},{"round":"2nd","category":"Backend","author":"안재현","originalTitle":"에러 없이 서버가 죽는다고? 병렬 다운로드 환경에서 발생한 장애 대응기","originalDescription":"\uD83D\uDDC2️ 병렬 다운로드 환경의 복잡한 서버 장애 대응 과정을 실무적이고 깊이 있게 다루는 기술 블로그 포스트로, 백엔드 개발자들에게 실질적인 인사이트를 제공합니다.","url":"https://www.uwoobeat.dev/server-crashes-sliently-in-parallel-download","ogTitle":"에러 없이 서버가 죽는다고? 병렬 다운로드 환경에서 발생한 장애 대응기","ogDescription":"대량의 엑셀 파일을 병렬로 다운로드 할 때 서버가 조용히 죽는 이슈를 해결해봅시다","ogImage":"https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F6a003529-0667-4c25-b3d4-23448d3ececb%2F7eabd860-319d-4825-aa84-58b28aba0485%2Fresult_(1).png?table=block&id=13e998e1-b709-8094-a7da-c490c7908524&cache=v2"},{"round":"2nd","category":"Backend","author":"이용선","originalTitle":"서버리스 환경의 프로젝트는 어떻게 관리해야 될까?","originalDescription":"\uD83D\uDE80 서버리스 환경의 복잡한 프로젝트 관리를 위한 핵심 전략과 실무 인사이트를 제공하는 유용한 기술 블로그 포스트!","url":"https://codediary21.tistory.com/155","ogTitle":"[누구나리포터 LAB] 서버리스 환경의 프로젝트는 어떻게 관리해야 될까?","ogDescription":"서버리스를 쓰게 된 배경\xa0이번에 테크포임팩트라는 활동을 통해서 비영리 기업을 지원하는 프로젝트에 참여하게 되었는데요. 해당 기업에서는 내부적으로 Lambda라는 기술을 사용하고 있어서 신규 프로젝트도 서버리스 환경에 맞춰 구축하고 운영하기 위해 고려해야 되는 점들을 조사하여 정리해보려고 합니다.\xa0일단 프로젝트를 개발하고 운영하는 전략을 알아보기 전에 서버리스는 어떤 장점을 가지고 있기에 스타트업부터 대기업까지 다양한 규모의 기업들이 활용하고 있는지에 대해 자세히 알아봅시다.\xa0서버리스의 가장 큰 장점 중 하나는 적은 러닝커브에 있습니다. 개발자가 일반적인 웹서버를 구축하기 위해 어떤 지식들이 필요한지 나열해보면 아래의 내용처럼 많은 지식들을 요구하는 것을 알 수 있었습니다. 그래서 초기에 개발을 배우고 서..","ogImage":"https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcTqFTQ%2FbtsJ9uO2i6h%2FRunQdaRohqeIag8KfiDlG1%2Fimg.png"},{"round":"2nd","category":"Backend","author":"이승민b","originalTitle":"C언어에서의 다차원 데이터 메모리 할당 방법","originalDescription":"\uD83E\uDDE9 C언어에서 다차원 데이터 메모리 할당, 1차원으로 데이터를 저장하고 인덱스 계산을 통해 접근하는 방식이 가장 효율적이고 성능이 우수합니다.","url":"https://chinensis.tistory.com/entry/C%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9C%EC%9D%98-%EB%8B%A4%EC%B0%A8%EC%9B%90-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%A9%94%EB%AA%A8%EB%A6%AC-%ED%95%A0%EB%8B%B9-%EB%B0%A9%EB%B2%95","ogTitle":"C언어에서의 다차원 데이터 메모리 할당 방법","ogDescription":"C언어에서 다차원 데이터, 혹은 다차원 배열의 메모리 동적 할당 방법을 다룹니다.터를 이용한 기초적인 방법부터, 일차원으로 메모리를 할당하는 선형 방식, 선형 데이터에 이차원 배열의 인터페이스([][])를 사용하는 방법, VLA(Variable Length Array)를 사용하는 방법 등 각 방식의 장단점을 이차원 데이터를 할당하는 예시 코드와 함께 설명합니다.개요프로그래밍을 하다 보면 2차원 이상의 데이터 구조를 다뤄야 할 때가 있습니다.게임의 맵 정보나 픽셀로 이루어진 이미지 데이터, 행렬과 테이블 데이터 등이 대표적입니다.이런 다차원 데이터는 컴파일 시점에 크기를 알 수 없는 경우가 많습니다.게임 맵 크기가 실행 중에 결정되거나, 처리할 이미지의 해상도를 사전에 알지 못하는 경우가 대표적이죠.이럴 ..","ogImage":"https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FoatMl%2FbtsJ7DeM16h%2FAzKcZVXiQDZxqkhlHJ7zw0%2Fimg.webp"},{"round":"2nd","category":"Backend","author":"심동민","originalTitle":"코드가 깔끔해지는 VO(Value Object)를 써야하는 이유","originalDescription":"\uD83D\uDC8A VO(Value Object)는 도메인 개념을 더 명확하게 표현하고 캡슐화를 통해 코드의 신뢰성과 테스트 용이성을 높여주는 불변 객체로, 비즈니스 로직을 더 깔끔하게 구현할 수 있게 해줍니다.","url":"https://dongmin-sim.github.io/posts/what-is-vo/","ogTitle":"코드가 깔끔해지는 VO(Value Object)를 써야하는 이유","ogDescription":"들어가며","ogImage":"https://dongmin-sim.github.io/assets/img/thumbnail/vo_thumbnail.png"},{"round":"2nd","category":"Backend","author":"이다은","originalTitle":"WebFlux에서 chunked 스트리밍 request 받기","originalDescription":"\uD83D\uDD04 WebFlux의 chunked 스트리밍 request 처리 방법을 다룬 백엔드 기술 글로, 실시간 데이터 처리가 필요한 개발자에게 유용한 참고 자료가 될 것 같습니다.","url":"https://welcometodannas.tistory.com/91","ogTitle":"WebFlux에서 chunked 스트리밍 request 받기","ogDescription":"LLM 모델이 응답을 생성하며 실시간으로 stream으로 보내주면서 스트리밍 요청을 다룰 일이 예전보다 많아진 것 같습니다.오늘은 Spring WebFlux에서 transfer-encoding: chunked 스트리밍 데이터를 request로 받을 수 있게 하기 위해 시도했던 방법들과 난관에 봉착했던 순간들, 결국 어떻게 성공했는지에 대한 이야기를 적어보려 합니다.\xa0transfer-encoding: chunkedtransfer-encoding: chunked란?우선 transfer-encoding: chunked가 뭔지 간단히 설명하고 넘어가겠습니다.\xa0http header의 많은 종류 중에 transfer-encoding이라는 헤더가 있습니다.https://developer.mozilla.org/en-U..","ogImage":"https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FwfVwC%2FbtsKkoiy1YS%2FMHrz70ASgMAIRTdl3KKvC0%2Fimg.gif"},{"round":"2nd","category":"Backend","author":"백승주","originalTitle":"Python - FastAPI와 Dependency Injector","originalDescription":"\uD83D\uDEE0️ FastAPI와 Dependency Injector를 활용하여 Python 웹 애플리케이션의 의존성 관리와 테스트 용이성을 개선하는 방법을 상세히 설명한 기술 가이드입니다.","url":"https://libertbaek.tistory.com/entry/FastAPI%EC%99%80-Dependency-Injector","ogTitle":"[Python] FastAPI와 Dependency Injector","ogDescription":"\uD83D\uDE80 들어가며소프트웨어를 설계하다보면 DI 패턴을 적용해야하는 경우 있습니다. python 기준으로 객체의 의존성 주입은 다양한 방식으로 구현할 수 있지만, Python에서 DI 패턴을 프레임워크 형태로 구현한 Dependency Injector 라이브러리를 통해 의존성 주입과 제어의 역전(IoC)기능을 사용할 수 있습니다.이번 포스팅에서는 FastAPI와 Dependency Injector를 활용해 Layered 아키택처를 구현하는 방법에 대해 알아보겠습니다.\uD83D\uDD0D 의존성 주입에 대한 간단 설명이번 포스팅에서 의존성 주입에 대한 개념에 대해 설명하지 않지만, 간단히 짚고 넘어가겠습니다. DI, IoC, DIP와 같은 개념은 Spring과 같은 프레임워크를 사용한다거나, 객체 지향 설계에 대해 공부하셨다면..","ogImage":"https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FEEX04%2FbtsKlx60NwS%2FLOkp6UyrTkdxgcFqVx9uv1%2Fimg.png"},{"round":"2nd","category":"AIML","author":"조영훈","originalTitle":"Kubernetes - 파드의 리소스 자원 사용량을 제한시켜보자","originalDescription":"\uD83D\uDCA1 쿠버네티스에서 파드의 리소스 사용량을 제한하고 관리하는 방법을 상세히 설명하며, requests/limits를 통한 오버커밋과 QoS 클래스를 활용한 우선순위 설정, ResourceQuota/LimitRange를 통한 네임스페이스별 자원 관리까지 실무에 필요한 핵심 개념들을 체계적으로 다룬 유용한 글입니다.","url":"https://techblog-history-younghunjo1.tistory.com/585","ogTitle":"[Kubernetes] 파드의 리소스 자원 사용량을 제한시켜보자","ogDescription":"\uD83D\uDD0A 해당 포스팅은 시작하세요! 도커/쿠버네티스 서적을 읽고 개인적인 목적 하에 작성되는 글입니다. 포스팅에 사용되는 모든 자료는 제가 직접 재구성하였음을 알립니다. 쿠버네티스 클러스터를 멀티 노드 환경으로 구축하는 데 있어서 얻을 수 있는 또 다른 강점은 여러 대의 노드(서버)를 묶어서 리소스(CPU, 메모리) 풀로 사용할 수 있다는 점이다. 이러한 점을 활용한다면 특정 파드에서 더 많은 CPU 와 메모리를 필요로 한다면 리소스 풀을 사용해 \\b동일한 리소스 스펙을 갖는 파드를 또 하나 추가시켜 수평 확장(Scale-Out)을 수행할 수도 있다. 하지만 이러한 Scale-Out 기능 만큼 또 다른 중요하게 신경써야 할 점이 있는데, 그것은 바로 컴퓨팅 자원 활용률(Utilization)이다. 이 \'컴퓨팅..","ogImage":"https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F1ikXK%2FbtsJ0fx8j4r%2F0jCqWsy8tbB1selIWUjfz1%2Fimg.png"},{"round":"2nd","category":"Fullstack","author":"이선협","originalTitle":"음악 검색 시스템 만들기","originalDescription":"\uD83C\uDFB5 Shazam과 같은 음악 검색 시스템의 마법 같은 원리를 FFT, 스펙트로그램, 소리 지문 등을 활용해 직접 구현하는 흥미로운 기술 해설!","url":"https://kciter.so/posts/music-recognition-system/","ogTitle":"음악 검색 시스템 만들기","ogDescription":"미래 학자이자 SF 소설의 거장 아서 C. 클라크는 라는 유명한 말을 남겼다. 이 말이 사실임을 증명하듯 현대 사회의 기술은 다양한 놀라움을 선사한다. 그 중에서도 Shazam이나 Soundhound와 같은 음악 검색 앱을 사용할 때 필자는 항상…","ogImage":"https://kciter.so/images/2024-10-27-music-recognition-system/thumbnail.png"},{"round":"2nd","category":"Fullstack","author":"문태준","originalTitle":"추상화를 통해 외부 시스템의 결합도를 낮추고 테스트 가능성(Testability) 높이기","originalDescription":"\uD83C\uDFAF 추상화를 통해 외부 시스템과의 결합도를 낮추고, 테스트 용이성을 높여 더 유연하고 확장 가능한 애플리케이션 구조를 만드는 사례입니다.","url":"https://velog.io/@langoustine/abstraction-to-testability","ogTitle":"추상화를 통해 외부 시스템의 결합도를 낮추고 테스트 가능성(Testability) 높이기","ogDescription":"애플리케이션과 AWS S3와 강하게 결합된 구조를 추상화를 통해 의존성 흐름을 역전시키고 테스트 가능성을 높일 수 있는 구조로 개선하여 외부 의존성과 애플리케이션의 결합도를 낮출 수 있었던 과정을 이야기해보았습니다.","ogImage":"https://velog.velcdn.com/images/langoustine/post/22ffc5eb-13b5-4aad-bc72-948f799bec10/image.jpeg"},{"round":"3rd","category":"AIML","author":"우연수","originalTitle":"결정트리 모델(Decision Tree)이 나의 문제를 해결해줄 수 있을까?","originalDescription":"\uD83C\uDF33 제한된 범위의 정수 응답 데이터에 결정트리가 적합한 이유와 비모수적 모델로서 어떤 특징을 가지고 있는지 설명하는 유익한 글입니다.","url":"https://woocosmos.github.io/decision-tree/","ogTitle":"결정트리 모델(Decision Tree)이 나의 문제를 해결해줄 수 있을까?","ogDescription":"들어가며\\n\\n아래와 같은 설문조사가 있다. 응답자들은 0 ~ 10점 선지 중 하나를 선택한다.\\n\\n\\n\\n\\n이러한 응답 데이터를 활용해서 특정 값을 예측하려 한다. 어떤 모델을 쓰면 좋을까? 이 문제 상황에서 가장 먼저 떠올린 것은 결정트리 모델이었다. 최소 0부터 최대 10으로 스케일이 한정된 정수 데이터가 주어졌으며, 결정트리 모델은 조건 (예를 들면, $x > 4$ ?)에 따라 샘플을 나누며 가지를 뻗어나가기 때문이다. 문제를 해결하는 데 결정트리가 적절한 모델이라는 직관적인 느낌을 받았다.\\n\\n그러나 내가 설명할 수 있는 최선은 여기까지였다. “내가 모델의 개념과 원리를 근본적으로 이해하고 있나?” 반성하게 되었고, 이 글을 쓰게 된 계기가 되었다.\\n\\n\\n  제한된 범위의 정수로 이루어진 응답 데이터를 처리하는 데 있어서 결정트리 모델이 적절한가?\\n\\n\\n즉, 이 질문에 답변하기 위해 해당 모델을 공부한 글이다.\\n\\n개념\\n\\n결정트리 Decision Tree, 의사결정 나무라고도 부른다.\\n\\n데이터를 기준에 따라 반복 분할함으로써 계층적인 구조로 하위 집합을 형성하는 방법론\\n\\n역사로 이해하기\\n\\n결정트리 모델의 시초는 1960년대 사회과학에서 찾아볼 수 있다. 이후 1980년대 데이터 과학 분야의 발전과 함께 결정트리 방법론이 소개되고 다양한 모델이 개발, 활용되기 시작했다.\\n\\n우선 1963년에 발간된 사회과학서 Problems in the Analysis of Survey Data, and a Proposal에 초기 개념이 소개되었다. 고차원의 다중공선성을 띠는 설문조사 데이터를 다루기 위한 방법론으로, 오차제곱합(SSE)를 최소화하도록 하위 그룹으로 분할한다.\\n\\n사회과학 분야에서 다룰 법한 간단한 예제를 상상해봤다. 응답자의 나이, 성별, 연봉 수준을 수집했으며 이에 따른 직업 만족도를 비교하려 한다. 그런데 나이가 많을수록 연봉 수준이 높아지기도 하고, 분포 상 응답자가 여자일수록 나이대가 낮아진다. 이러한 변수 간 상호작용을 고려하면서 종속변수(직업 만족도)의 차이를 설명하기 위해 응답자를 그룹으로 나눠볼 수 있다. 30대 미만/이상으로 나눠도 좋고, 성별에 따라 나눠도 좋다. 중요한 건 나눠진 그룹끼리 직업 만족도를 비교했을 때 차이가 커지도록 하는 것이다.\\n\\n\\n그룹끼리 차이가 커지도록 그룹을 나누는 이유는, 그룹 안의 동질성이 높다는 것과 같은 의미이기 때문이다. 한 그룹의 평균을 예측값으로 삼는다고 치자. 그룹의 동질성이 높을수록 그룹 내 샘플들은 평균에 가까이 몰려 있을 테니 실제값과 예측값 간의 오차가 전반적으로 줄어든다.\\n\\n이렇듯 직업 만족도가 가장 크게 차이나는 두 그룹으로 나눠 첫번째 분할을 마쳤다. 그 다음에 오차가 더 큰 그룹을 선택한 다음 그 안에서 또 분할한다. 마찬가지로 그룹 간 차이가 크게 발생하는, 다시 말해 오차를 최소화하는 분할 기준을 결정한다. 분할을 반복한다.\\n\\n\\nProblems in the Analysis of Survey Data, and a Proposal(1963), 17페이지. 오늘날 결정트리 모델을 시각화한 모습과 같다.\\n\\n사회과학 분야에서 분할의 결과는 이렇게 활용할 수 있다. ‘30세 미만 남성 노동직 그룹과 여성 고졸 그룹의 직업 만족도가 75점 수준으로 비슷하다’ - 한편 머신러닝 분야라면? 입력 데이터에 대해 예측값을 출력하는 모델을 생성하는 데 활용할 수 있겠다! 30세 미만 남성 노동직이 입력으로 들어오면 75점 가량으로 예측하는 것이다.\\n\\n이어 1984년 Classification and Regression Trees에서 결정트리 방법론을 기반으로 한 알고리즘 CART가 발표됐다. Classification And Regression Tree의 줄임말이다. 이어 CART의 업그레이드 버전인 ID3(Iterative Dichotomiser 3), C4.5, C5.0 등이 발표되면서 결정트리 모델이 더욱 발전해나갔다. 오늘날 많이 사용하는 Random Forest, XGBoost도 결정트리 방법론을 기반으로 개발된 알고리즘들이다.\\n\\n분할의 기준\\n\\nCART, ID3, C4.5, C5.0 알고리즘은 모두 결정트리 방법론을 기반으로 한다. 하지만 분할 기준을 무엇으로 설정하는지에 따라 다른 알고리즘으로 발전한 결과다. 앞서 언급한 예제에서는 간단하게 그룹별 직업 만족도의 평균값 차이를 기준으로 분할했지만, 실제 알고리즘에서는 더 효율적이거나 정교한 지표를 분할의 기준으로 삼는다.\\n\\n분할 기준의 본질은 불순도(impurity)를 낮추는 것이다. 앞서 그룹 내 동질성을 높이는 것이 중요하다고 언급했다. 이는 불순도를 낮춘다는 말과 의미가 동일하다.\\n\\n\\n\\n다른 데이터가 많이 섞여 있을수록 동질성이 떨어지며 이는 곧 불순도가 높은 상태다\\n\\n분할의 결과로 얼마나 동질성이 높아지거나 낮아졌는지, 불순도를 수치화하는 방식은 크게 두 가지. 지니 계수와 엔트로피(정보 이득)다.\\n소개한 알고리즘 중 CART는 지니 계수를 사용하며, ID3, C4.5, C5.0은 엔트로피 및 정보 이득을 사용한다.\\n\\n지니 계수(Gini coefficient)\\n\\n지니 계수가 높을수록 불순도가 높다고 판단한다.\\n\\n\\\\[\\\\text{Gini} = \\\\sum_{j=1}^{J} p_{j}(1-p_{j}) = 1 - \\\\sum_{j=1}^{J} p_{j}^{2}\\\\]\\n\\n\\n  $J$\\n  각 클래스\\n  $p_{j}$\\n  샘플이 클래스 $j$에 속할 확률\\n  $p_{j}(1-p_{j})$\\n  같은 클래스의 샘플을 뽑을 확률과 이어 다른 클래스의 샘플을 뽑을 확률을 곱하여 한 노드 안이 얼마나 섞여 있는지 나타내준다\\n\\n\\n지니 계수는 경제학에서 소득이 얼마나 불평등하게 분포되었는지 나타내는 데 쓴다. 결정트리 모델의 맥락에서는 분할된 노드에 얼마나 다른 클래스 샘플이 섞여 있는지 표현해준다. \\n$p_{j}^{2}$은 그 클래스의 샘플이 두 번 연속 추출될 확률이기 때문에 값이 높을수록 동질성이 높다는 의미다. 지니 계수는 이를 전체에서 뺌으로써 불순도를 계산한 결과다.\\n\\n위에서 첨부한 이미지를 통해 분할 결과를 지니 계수로 평가해보겠다.\\n\\n\\n\\n각 클래스에 대해 $p(1-p)$를 구한 후 합친다.\\n\\n좌측 노드\\n\\n\\n  노랑 클래스 : 4개 중 2개이므로, $p_{\\\\text{노랑}} = 0.5$. 즉, $0.5 * (1 - 0.5)$.\\n  초록 클래스 : 4개 중 1개이므로, $p_{\\\\text{초록}} = 0.25$. 즉, $0.25 * (1 - 0.25)$.\\n  검정 클래스 : 4개 중 1개이므로, $p_{\\\\text{초록}} = 0.25$. 즉, $0.25 * (1 - 0.25)$.\\n\\n\\n$\\\\text{Gini}_{\\\\text{좌측}} = 0.25 + 0.1875 + 0.1875 = 0.625$\\n\\n우측 노드\\n\\n\\n  노랑 클래스 : 3개 중 1개이므로, $p_{\\\\text{노랑}} \\\\approx 0.333$. 즉, $0.333 * (1 - 0.3335)$.\\n  초록 클래스 : 3개 중 2개이므로, $p_{\\\\text{초록}} \\\\approx 0.667$. 즉, $0.667 * (1 - 0.667)$.\\n\\n\\n$\\\\text{Gini}_{\\\\text{좌측}} = 0.222 + 0.111 = 0.445$\\n\\n그 다음 분할된 개수를 기준으로 가중평균을 구한다. 좌측 노드는 네 개, 우측 노드는 세 개 샘플을 가져갔다.\\n\\n\\\\[\\\\text{Gini}_{\\\\text{예시1}} = \\\\frac{4}{7} \\\\times 0.625 + \\\\frac{3}{7} \\\\times 0.445 \\\\approx 0.548\\\\]\\n\\n\\n\\n\\n\\n해당 분할 결과에 대해서도 동일하게 구한다.\\n\\n\\\\[\\\\text{Gini}_{\\\\text{예시2}} = \\\\frac{3}{7} \\\\times 0 + \\\\frac{4}{7} \\\\times 0.375 = 0.214\\\\]\\n\\n좌측 노드에서 다른 클래스가 추출될 확률($1-p$)는 $0$이므로 계산 결과도 $0$이 된다.\\n\\n\\n\\n분할 전 지니 계수가 $0.612$ 라는 점을 고려하면, 두 분할 방식 모두 지니 계수가 줄어들어 불순도가 낮아진 상태이다. 둘 중에서는 이렇게! 의 지니 계수 $0.214$ 가 이렇게? 의 $0.548$ 보다 더 낮으므로 더 적합한 분할이라고 판단할 수 있다.\\n\\n엔트로피(Entropy)\\n\\n엔트로피는 정보량의 기대값을 의미한다.\\n\\n\\\\[\\\\text{Entropy} = -\\\\sum_{j=1}^{J} p_{j} \\\\log{(p_{j})}\\\\]\\n\\n\\n  $J$\\n  각 클래스\\n  $p_{j}$\\n  샘플이 클래스 $j$에 속할 확률\\n  $-\\\\log{(p_{j})}$\\n  클래스 $j$에 대한 정보량\\n\\n\\n정보 이론에서는 의외인 사건이 발생할 때 정보량(Information Content)이 더 많다고 본다. 여기서 ‘의외인 사건’은 곧 사건의 확률이 낮다는 것을 의미한다. (11월은 강우 확률이 낮으니까 11월에 눈이 오는 것은 의외인 사건이며 정보량이 많은 것이기도 하다. 1월에 눈이 오는 사건에 비해서 말이다.)\\n\\n\\n\\n이처럼 확률이 낮을수록 정보량이 많고 높을수록 정보량이 낮아지는 것은 확률에 로그를 취하고 음수화한 값으로 표현할 수 있다. 그리고 이 정보량에 확률을 곱함으로써 구한 기댓값을 엔트로피라고 부른다.\\n\\n\\\\[-p_{j} \\\\times \\\\log{(p_{j})}\\\\]\\n\\n\\n  확률이 낮다 => 정보량이 많다 => 엔트로피가 높다 <=> 사건을 예측하기 어렵다\\n\\n\\n노드에 다양한 클래스가 혼재되어 있을수록 어떤 클래스가 추출될지 예측하기 어렵다. 따라서 불순도를 측정하는 방식으로 엔트로피를 쓸 수 있다.\\n\\n정보획득량 (Information Gain)\\n\\n결정트리 알고리즘 ID3 에서는 ‘정보획득량’을 불순도 지표로 사용하는데, 이는 분할 전후의 엔트로피 차이를 계산한 값이다.\\n\\n\\\\[IG(S, A) = H(S) - \\\\sum_{t \\\\in T} p(t) H(t) = H(S) - H(S|A)\\\\]\\n\\n\\n  $IG(S, A)$\\n  $A$ 속성을 기준으로 $S$를 분할했을 때의 정보 획득량\\n  $H(S)$\\n  $S$의 엔트로피\\n  $T$\\n  $S$를 분할함으로써 생성된 노드들\\n  $p(t)$\\n  $S$ 대비 노드 $t$의 비율(크기)\\n  $H(t)$\\n  노드 $t$의 엔트로피\\n  $H(S|A)$\\n  $A$ 속성을 기준으로 $S$를 분할하여 생성된 노드들의 $H(t)$를 가중 평균한 값\\n\\n\\n‘이렇게!’ 분할 방식을 정보 획득량에 따라 평가해보자. 나이 30살을 기준으로 샘플을 분할했다고 가정했다.\\n\\n\\n\\n먼저 분할 전 엔트로피 $H(S)$를 구한다. 엔트로피 식 $-\\\\sum_{j=1}^{J} p_{j} \\\\log{(p_{j})}$ 을 적용하면 된다.\\n\\n\\n  노랑 클래스 : 7개 중 3개이므로, $- \\\\frac{3}{7} \\\\log \\\\frac{3}{7}$\\n  초록 클래스 : 7개 중 3개이므로, $- \\\\frac{3}{7} \\\\log \\\\frac{3}{7}$\\n  검정 클래스 : 7개 중 1개이므로, $- \\\\frac{1}{7} \\\\log \\\\frac{1}{7}$\\n\\n\\n$H(S) \\\\approx 0.523 + 0.523 + 0.402 = 1.448$\\n\\n다음으로 분할 후 엔트로피 $H(S|A)$를 구한다. 이는 각 노드의 엔트로피를 가중 평균하여 계산한다.\\n\\nTrue 노드\\n\\n\\n  초록 클래스 : 3개 중 3개이므로, $- \\\\frac{3}{3} \\\\log \\\\frac{3}{3} = 0$\\n\\n\\n$H(\\\\text{True}) = 0$\\n\\nFalse 노드\\n\\n\\n  노랑 클래스 : 4개 중 3개이므로, $- \\\\frac{3}{4} \\\\log \\\\frac{3}{4} = 0$\\n  검정 클래스 : 4개 중 1개이므로, $- \\\\frac{1}{4} \\\\log \\\\frac{1}{4} = 0$\\n\\n\\n$H(\\\\text{True}) \\\\approx 0.311 + 0.5 = 0.811$\\n\\n그 다음 분할된 비율을 기준으로 가중평균을 구한다. 좌측 노드는 네 개, 우측 노드는 세 개 샘플을 가져갔다.\\n\\n$H(S|A) = \\\\frac{3}{7} \\\\cdot H(\\\\text{True}) + \\\\frac{4}{7} \\\\cdot H(\\\\text{False}) \\\\approx 0.463$\\n\\n최종적으로 분할 전에 비해 정보량을 비교한다.\\n\\n\\\\[IG(S, A) = H(S) - H(S|A) \\\\approx 1.448 - 0.463 = 0.985\\\\]\\n\\n\\n\\n분할 전후의 엔트로피를 비교한 결과 정보 이득은 약 $0.985$이다. 반면 이렇게? 분할 방식의 정보 이득을 계산하면 $0.198$로 비교적 정보 이득이 적은 것을 알 수 있다.\\n\\n이처럼 불순도를 낮추는 방향으로 데이터를 분할하는 것을 반복함으로써 계층적인 트리 구조를 형성하는 것이 결정트리 방법론이다. 여기서 ‘불순도’를 어떤 지표로 평가할지, 언제까지 분할을 반복할지, 어떤 노드를 주로 참고할지 등 구체적인 활용 방식에 따라 다른 알고리즘이 될 수 있다.\\n\\n직관 설명하기\\n\\n\\n  제한된 범위의 정수로 이루어진 응답 데이터를 처리하는 데 있어서 결정트리 모델이 적절한가?\\n\\n\\n지금까지 결정트리 방법론의 등장 맥락, 분할의 기준을 살펴보았다. 이제 처음의 질문으로 돌아가보자.\\n\\n“제한된 범위”\\n\\n결정트리 모델은 값이 좁은 범위로 제한된 데이터에 대해 유리할 수 있다. 결정트리가 비모수적 모델(non-parametric models)이기 때문이다.\\n결정트리 모델은 주어진 데이터를 거듭된 조건에 따라 쪼개 나간다. 특정 분포를 가정하지 않고 주어진 데이터에 따라 비선형적인 구조를 형성한다는 의미다. 반면 선형회귀와 같은 모수적 모델은 모든 범위의 데이터에 대해서 유효한 분포(함수)가 있다고 가정하고 이에 맞춰 파라미터를 학습(fit)한다. 실제 데이터에 비해 함수 가정이 과도할 수 있다. 우리는 0 ~ 10 의 범위에서 벗어나는 입력은 전혀 고려하지 않고 있단 말이다.\\n\\n“정수”\\n\\n결정트리 모델은 특정 임계값을 기준으로 데이터를 분할하는데, 정수형 데이터는 이산적(discrete) 성격을 띠므로 분할 자체가 직관적이고 간단해진다. 예를 들어 ‘5번 질문에 대한 응답이 3점 이상’이라는 분할 조건을 세우는 건 간단하고 직관적이다. 하지만 데이터가 연속형이었으면 ‘A 속성이 0.3728 이상’과 같이 정밀한 임계값을 정해야 했을 것이다. 당연히 더 많은 경우의 수를 고려해야 하기 때문에 난이도가 높아진다.\\n\\n“응답 데이터”\\n\\n설문 참여자들은 비슷한 질문에 대해 비슷하게 응답하는 경향이 있을 것이다. 예를 들어 ‘인생이 행복합니까?’ 라는 질문에 그렇다고 응답할수록, ‘생활이 만족스럽습니까?’ 라는 질문에도 그렇다고 응답할 것이다. 이처럼 변수 간 상관관계가 존재하는 다중공선성의 문제에 결정트리 모델이 유리하다. 애초에 결정트리는 사회과학 연구에서 일종의 교차분석과 유사한 방법론으로 제시되지 않았는가?\\n결정트리는 불순도가 (지니 계수든 엔트로피든) 가장 크게 감소하는 조건을 선택하여 분할을 실시하기 때문에 가장 중요한 변수가 우선적으로 선택되는 효과가 있다. 그 결과 비슷한 패턴의 변수들은 자연스럽게 제외되기 때문에 변수 간 상관관계는 결정트리 모델에 큰 해가 되지 않는다.\\n\\n나가며\\n\\n결정트리의 작동 맥락과 주요 지표를 살펴봄으로써 나의 직관을 설명할 수 있었다. 이 과정에서 ‘비모수형 모델’의 개념을 명확하게 이해할 수 있게 되었고, 머신러닝 분야에서 ‘엔트로피’가 가지는 의미를 다시 상기할 수 있었다. 이번 공부를 통해 나의 직관이 어느 정도 의미 있었다는 결론을 내렸으므로, 이제 실제 적용하는 일만 남았다.\\n\\n분량이 너무 길어져서 가지치기나 정지규칙, 코드 등 더 깊은 내용은 다루지 못했지만 모델의 본질과 연결되는 직관을 이해했다는 점에서 만족스러운 공부였다. 이어서 결정트리 방법론을 기반으로 하는 다양한 머신러닝 모델에 대해서 하나씩 공부하는 시간을 가져보겠다.\\n","ogImage":null},{"round":"3rd","category":"Backend","author":"최현구","originalTitle":"Hibernate 의 ‘불편한’ 편의 기능들.","originalDescription":"\uD83E\uDD14 Hibernate의 편의성이 오히려 불편함을 초래할 수 있다는 점을 ActionQueue의 SQL 정렬과 JPQL의 즉시 flush 현상을 통해 설명하며, 실용적 대안으로 queryDSL과 직접 SQL 작성을 추천합니다.","url":"https://monday9pm.com/hibernate-%EC%9D%98-%EB%B6%88%ED%8E%B8%ED%95%9C-%ED%8E%B8%EC%9D%98-%EA%B8%B0%EB%8A%A5%EB%93%A4-06a1fbc7492a/","ogTitle":"Hibernate 의 ‘불편한’ 편의 기능들","ogDescription":"Hibernate 는 지연 로딩, 캐싱, 쿼리 순서 최적화 등 개발자가 애플리케이션 개발에만 집중할 수 있도록 여러가지 편의 기능을 제공합니다. 저는 오늘 이 ‘편의 기능’ 때문에 ‘불편해진’ 경험들에 대해 이야기 해보려 합니다.","ogImage":"https://miro.medium.com/v2/resize:fit:1200/1*Ea-5ZqrRIUcrCiYPTyAi4w.png"},{"round":"3rd","category":"Backend","author":"김혜송","originalTitle":"Kotlin, Collection vs Sequence - 최적의 선택 기준","originalDescription":"\uD83D\uDD0D 컬렉션과 시퀀스의 장단점을 비교하여 작은 데이터셋은 컬렉션이, 큰 데이터셋은 시퀀스가 유리하며 병렬처리가 필요하거나 정렬이 필요한 경우는 컬렉션을 추천합니다.","url":"https://velog.io/@wisepine/Kotlin-Collection-vs-Sequence-%EC%B5%9C%EC%A0%81%EC%9D%98-%EC%84%A0%ED%83%9D-%EA%B8%B0%EC%A4%80/","ogTitle":"[Kotlin] Collection vs Sequence :: 최적의 선택 기준","ogDescription":"Sequence 를 적재적소에 쓰려면","ogImage":"https://velog.velcdn.com/images/wisepine/post/9e9d72db-5a6a-44d5-998c-772ed4a31f8f/image.png"},{"round":"3rd","category":"Backend","author":"김준우","originalTitle":"spring kafka auto-commit 동작원리 - 데이터 유실과 중복처리","originalDescription":"\uD83D\uDD0D Kafka의 auto-commit은 poll() 메서드 호출 시점에 commit이 이루어져 메시지 중복은 발생할 수 있으나 유실은 방지할 수 있다는 내용에 대한 글입니다.","url":"https://junuuu.tistory.com/1028/","ogTitle":"spring kafka auto-commit 동작원리 : 데이터 유실과 중복처리","ogDescription":"대상 독자spring kafka의 auto-commit 동작원리를 알고 싶으신 분들\xa0auto-commit을 활용할 때 데이터 유실과 중복처리를 제어할 수 있는 방법을 알고 싶으신 분들\xa0\xa0개요많은 블로그들을 살펴보면 kafka consumer의 옵션 중 하나인 auto-commit은 일정주기로 commit을 수행하기 때문에 메시지의 중복 및 유실이 발생할 수 있다고 설명합니다.\xa0일정주기로 자동으로 commit을 수행한다는 것은 메시지가 처리되는 중간에도 commit이 일어날 수 있을 것 같습니다.\xa0만약 auto-commit을 활성화한다면 내부적으로는 어떤 일이 일어날까요?\xa0이번 글에서는 spring kafka에서 auto-commit이 어떻게 동작하는지 알아보고 이 과정에서 데이터 유실과 중복처리를 어떻게..","ogImage":"https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FSmCsj%2FbtsJPQ7wXM5%2FVkHB5JPeqEkkX2yUx91XBK%2Fimg.png"},{"round":"3rd","category":"Backend","author":"이성진","originalTitle":"서버에서 Graceful Shutdown은 왜 필요할까","originalDescription":"\uD83D\uDED1 서버의 안정성과 사용자 경험을 보장하기 위해 Graceful Shutdown은 필수적이며, 진행 중인 요청을 안전하게 처리하고 자원을 정리하여 예기치 못한 서버 종료 상황에서도 신뢰성 있는 서비스를 제공할 수 있습니다.","url":"https://milkymilky0116.github.io/posts/Graceful_Shutdown/","ogTitle":"서버에서 Graceful Shutdown은 왜 필요할까","ogDescription":"서론","ogImage":null},{"round":"3rd","category":"Backend","author":"강승현","originalTitle":"퇴사를 고민하는 주니어에게,","originalDescription":"\uD83E\uDD14 주니어 개발자의 퇴사 고민을 건강, 자기 효능감, 성장이라는 3가지 관점에서 분석하며 신중한 결정을 돕는 실용적인 조언글","url":"https://imksh.com/128/","ogTitle":"퇴사를 고민하는 주니어에게,","ogDescription":"프롤로그취업이 너무나도\\b 어려운 시기에 개발자 취업을 꿈 꿔왔던 멘티가 있었습니다. 결국 치열한 노력 끝에 취업에 성공하여 기쁜 소식을 전해줬어요.\xa0하지만 몇 개월 후, 제게 다시 연락을 해왔습니다. \\"힘들다, 퇴사하고 싶다\\"라는 지쳐있는 이야기를 말이죠.\xa0저는 몇 가지 제 경험과 가치관에 대해 이야기를 해주었습니다. 대기업 공채 입사 이틀만에 퇴사를 결심한 이야기부터, 이직을 한 순간까지 어떻게 버텼는지, 그 과정에서 스스로 느낀 점들에 대해서요. 우리가 살아가는 길에는 많은 선택지가 있지만, 퇴사나 이직은 특히나 어렵고 고민되는 선택지 중 하나일 겁니다.\xa0이 글은 퇴사라는 단어와 가까워지기 시작한, 혹은 아직은 멀게 느껴지지만 언젠가는 퇴사를 고민하게 될지도 모를, 4년차 이하의 개발자들을 위해 썼습..","ogImage":"https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FEWZOg%2FbtsKZcWv0Bi%2FCu7OeJqjnHhOw1mNgn92SK%2Fimg.jpg"},{"round":"3rd","category":"Data","author":"김수민b","originalTitle":"Garbage In, Garbage Out! 당신의 데이터 믿을만한가요?","originalDescription":"\uD83D\uDCCA 데이터 품질의 중요성을 강조하며 \'Garbage In, Garbage Out\' 원칙을 통해 신뢰할 수 있는 데이터 관리의 필요성을 설명하는 유익한 글입니다.","url":"https://suminii.tistory.com/entry/Garbage-In-Garbage-Out-%EB%8B%B9%EC%8B%A0%EC%9D%98-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%AF%BF%EC%9D%84%EB%A7%8C%ED%95%9C%EA%B0%80%EC%9A%94/","ogTitle":"Garbage In, Garbage Out! 당신의 데이터 믿을만한가요?","ogDescription":"본 포스팅은 \'데이터 품질\'과 \'데이터 다운타임\'에 대해 설명하고, \'데이터 품질\'을 향상시키기 위한 방법들을 정리한 포스팅입니다.\xa01. 서론데이터는 오늘날의 비즈니스와 의사결정의 핵심 자원이라고 할 수 있다. 그러나 데이터의 품질 문제나 다운타임은 빈번하게 예기치 않은 오류와 혼란을 초래한다. 이 글에서는 데이터 품질과 다운타임이 무엇인지 알아보고, 데이터 품질 문제를 해결하고 다운타임을 줄이기 위한 주요 전략과 도구를 살펴보려고 한다.\xa0데이터 엔지니어로 일하다보면 다음과 같은 상황을 마주할 때가 있다.\uD83D\uDC68‍\uD83D\uDCBB 개발자: \\"쿼리 작업이 끝났습니다! 데이터 파이프라인도 다 구축했고요. 이제 필요한 데이터는 다 모인 거죠?\\"\uD83E\uDDD1‍\uD83D\uDCBC 현업 부서 담당자: \\"어... 그런데 필요한 데이터가 누락된 것 같은데요..","ogImage":"https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FU1mrM%2FbtsKCmY7ViW%2FK9B8fVjz7i2u0jiAxEqUU1%2Fimg.png"},{"round":"3rd","category":"Data","author":"이동규","originalTitle":"Text-to-SQL를 알아보자","originalDescription":"\uD83D\uDD0D SQL 지식이 없는 비개발자도 자연어로 데이터를 조회할 수 있게 해주는 Text-to-SQL 기술을 Python으로 구현하는 방법을 상세히 설명한 글로, OpenAI API와 Vector Database를 활용한 실용적인 예제를 제공합니다.","url":"https://ivoryrabbit.github.io/posts/Text-to-SQL/","ogTitle":"Text-to-SQL를 알아보자","ogDescription":"안녕하세요, 잘 부탁드립니다!","ogImage":null},{"round":"3rd","category":"Data","author":"조해창","originalTitle":"A/B 테스트로 팝업 성과 측정하기","originalDescription":"\uD83D\uDCCA A/B 테스트로 팝업의 효과를 객관적으로 측정하여 데이터 기반의 의사결정을 할 수 있도록 GTM, GA4, BigQuery, Tableau를 활용한 상세한 분석 가이드를 제공합니다.","url":"https://www.actionspeak.kr/blog/guide/abt/","ogTitle":"A/B 테스트로 팝업 성과 측정하기 | actionSpeak","ogDescription":"A/B 테스트로 팝업 성과 측정하기","ogImage":"https://www.actionspeak.kr/posts/guide/abt/thumbnail.png"},{"round":"3rd","category":"Frontend","author":"김성현a","originalTitle":"JS 탐구생활 - 클로저 시리즈 1. 클로저란 무엇인가?","originalDescription":"\uD83D\uDD0D 클로저의 핵심 개념과 활용을 명확하게 설명한 글로, 일급 객체 함수와 렉시컬 스코프를 사용하는 언어에서 표현식의 평가 결과로서 외부 환경에 대한 참조를 함께 묶어 정보 은닉, 전달, 추적 등에 활용할 수 있음을 상세히 다룹니다.","url":"https://witch.work/posts/javascript-closure-deep-dive-application/","ogTitle":"JS 탐구생활 - 클로저 시리즈 1. 클로저란 무엇인가?","ogDescription":"클로저, 대체 무엇이며 어디에 쓰는 거지?","ogImage":"https://res.cloudinary.com/desigzbvj/image/upload/c_scale,w_300,f_auto/blog/thumbnails/static-thumbnail-6e7fb17a-png"},{"round":"3rd","category":"Frontend","author":"김성현a","originalTitle":"JS 탐구생활 - 클로저 시리즈 2. 수학자들의 꿈에서 JS의 스타가 되기까지","originalDescription":"\uD83D\uDD0D 클로저의 역사를 추적하며 수학자들의 꿈에서 시작해 JavaScript의 핵심 기능이 되기까지의 여정을 다룬 글로, 람다 계산법과 함수형 프로그래밍의 발전 과정을 통해 클로저의 중요성을 이해할 수 있습니다.","url":"https://witch.work/posts/javascript-closure-deep-dive-history/","ogTitle":"JS 탐구생활 - 클로저 시리즈 2. 수학자들의 꿈에서 JS의 스타가 되기까지","ogDescription":"수학, 기계적인 계산, 람다 계산법, 컴퓨터, Lisp, Algol을 거치면서 생긴 표현식의 평가에 대한 문제와 해결, 이 흔적을 오늘날 우리는 클로저라 부른다.","ogImage":"https://res.cloudinary.com/desigzbvj/image/upload/c_scale,w_300,f_auto/blog/thumbnails/static-thumbnail-12600110-png"},{"round":"3rd","category":"Frontend","author":"이동현","originalTitle":"React Hook Form과 유사한 인터페이스 만들기","originalDescription":"\uD83D\uDD27 React Hook Form과 유사한 인터페이스를 직접 구현하여 일관성 있는 폼 관리를 가능하게 했고, 제어/비제어 컴포넌트의 장단점을 고려한 성능 최적화와 타입 안정성을 확보했습니다.","url":"https://d5ng-blog.vercel.app/React/rhf/","ogTitle":"d5ng-Blog - React Hook Form과 유사한 인터페이스 만들기","ogDescription":"상태 관리를 통해 React Hook Form과 유사한 인터페이스의 훅 만들기 \uD83D\uDE80","ogImage":"https://d5ng-blog.vercel.app//posts/react/rhf/thumbnail.jpg"},{"round":"3rd","category":"Frontend","author":"조성훈","originalTitle":"\uD83C\uDF54 ദി=\xb4∀｀) 안녕하새용저는햄부기애용","originalDescription":"\uD83C\uDFAE 드래그 앤 드롭으로 움직이고 랜덤하게 걷는 모션을 보여주는 귀여운 햄버거 캐릭터를 크롬 확장프로그램으로 구현한 재미있는 프로젝트입니다.","url":"https://sungpaks.github.io/draggable-and-auto-walking-character-chrome-extension/","ogTitle":"\uD83C\uDF54 ദി=\xb4∀｀) 안녕하새용저는햄부기애용","ogDescription":"드래그 앤 드롭, 애니메이션 등을 리액트로 구현하고, JS로 바꿔서 크롬 확장 프로그램으로 만들기","ogImage":null},{"round":"3rd","category":"Fullstack","author":"손영인","originalTitle":"데이터 스트림이 무엇이냐는 질문에 제대로 대답해보기","originalDescription":"\uD83D\uDD04 데이터 스트림의 개념과 특징을 명확하게 설명한 글로, 변경 이벤트의 연속성과 무한한 데이터 처리라는 핵심을 이해하기 쉽게 고스톱 예시와 함께 설명하여 추천합니다.","url":"https://velog.io/@broccolism/%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%8A%A4%ED%8A%B8%EB%A6%BC%EC%9D%B4-%EB%AC%B4%EC%97%87%EC%9D%B4%EB%83%90%EB%8A%94-%EC%A7%88%EB%AC%B8%EC%97%90-%EC%A0%9C%EB%8C%80%EB%A1%9C-%EB%8C%80%EB%8B%B5%ED%95%B4%EB%B3%B4%EA%B8%B0/","ogTitle":"데이터 스트림이 무엇이냐는 질문에 제대로 대답해보기","ogDescription":"화투를 치면서 ‘이번 판에서 돈을 잃음’ 이벤트가 발생할 때마다 ‘술을 마심’ 행위를 해야한다면 스트리밍 모델로 가는게 좋다.","ogImage":"https://velog.velcdn.com/images/broccolism/post/8961d307-4066-4e24-84a2-559a1052c499/image.png"},{"round":"3rd","category":"Infra","author":"이창민","originalTitle":"싱글톤에 대한 오해","originalDescription":"\uD83D\uDD0D 정적 팩토리 메서드 패턴만으로는 싱글톤이 보장되지 않는다는 오해를 바로잡고, NestJS와 Spring Core의 싱글톤 객체 관리 방식을 상세히 분석한 유익한 글입니다.","url":"https://eeeasycode.github.io/do_you_know_singleton/","ogTitle":"싱글톤에 대한 오해","ogDescription":"Prerequisite : 본 글에서 언급되지만, 직접적인 설명은 하지 않는 것들입니다. 객체 싱글톤 정적 팩토리 메서드 패턴 DI/IoC 최근에 프론트엔드 개발자 지인과 함께 커피챗을 했는데, \\"객체\\"와 \\"싱글톤\\" 에 관련된 주제로 이야기를 잠깐 나눴다. 정확히는 내가 정적 팩토리 메서드에 관한 이야기를 하다가 잘못 이야기를 한 부분이 있었는데, 정적 …","ogImage":"https://eeeasycode.github.io//og-image.png"},{"round":"4th","category":"AIML","author":"강병진","originalTitle":"LLM Evaluation이 중요한 이유","originalDescription":"\uD83E\uDD16 대규모 언어 모델(LLM) 애플리케이션 개발에서 평가의 중요성은 일관성 없는 출력, 환각 위험, 예측 불가능한 사용자 상호작용을 관리하고 품질을 통제하여 신뢰할 수 있는 AI 서비스를 구축하는 핵심 과정입니다.","url":"https://jasonkang14.github.io/llm/why-evaluation-is-important","ogTitle":"Why Is Evaluation Important in Building an LLM Application? - Blog by Jason Kang","ogDescription":null,"ogImage":null},{"round":"4th","category":"AIML","author":"김주성","originalTitle":"코딩테스트를 위한 대표 유형 중급 알고리즘 정리(by.백준 플래티넘)","originalDescription":"\uD83D\uDE80 코딩테스트 준비의 핵심 알고리즘들을 중급 수준에서 체계적으로 정리하여, 다익스트라/플로이드워셜/크루스칼/스위핑/위상정렬 등 핵심 알고리즘을 실전 예제와 함께 상세히 설명한 유용한 학습 자료입니다.","url":"https://velog.io/@8804who/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EC%9C%84%ED%95%9C-%EB%8C%80%ED%91%9C-%EC%9C%A0%ED%98%95-%EC%A4%91%EA%B8%89-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%A0%95%EB%A6%ACby.%EB%B0%B1%EC%A4%80-%ED%94%8C%EB%9E%98%ED%8B%B0%EB%84%98","ogTitle":"코딩테스트를 위한 대표 유형 중급 알고리즘 정리(by.백준 플래티넘)","ogDescription":"코딩테스트를 위한 대표 유형 중급 알고리즘 정리(by.백준 플래티넘)","ogImage":"https://velog.velcdn.com/images/8804who/post/42337423-2f87-4087-be34-44fb9967b78c/image.png"},{"round":"4th","category":"Backend","author":"심동민","originalTitle":"해시 자료구조와 HashMap이 해시 충돌을 해결하는 방법 | Codongmin","originalDescription":"\uD83E\uDDE0 해시 자료구조의 핵심 원리와 Java HashMap의 해시 충돌 해결 방식을 깊이 있게 이해할 수 있는 완벽한 가이드로, 개발자들에게 해시 메커니즘의 내부 동작과 최적화 전략을 제공하는 필수 학습 자료입니다.","url":"https://dongmin-sim.github.io/posts/hash-data-structure/","ogTitle":"해시 자료구조와 HashMap이 해시 충돌을 해결하는 방법","ogDescription":"\uD83D\uDE4B 들어가며","ogImage":"https://dongmin-sim.github.io/assets/img/thumbnail/hash-data-structure.png"},{"round":"4th","category":"Backend","author":"임성후","originalTitle":"(MySQL) 인덱스가 B+Tree 를 선택한 이유","originalDescription":"\uD83C\uDF33 데이터베이스 성능의 비밀, B+Tree! 노드당 여러 키를 저장하여 트리 깊이를 낮추고 Disk I/O를 획기적으로 줄여 MySQL 인덱스의 검색 속도와 효율성을 극대화하는 혁신적인 자료구조입니다.","url":"https://hugehoo-blog.vercel.app/blog/Database/B%20tree%20as%20Index","ogTitle":null,"ogDescription":null,"ogImage":null},{"round":"4th","category":"Backend","author":"이승민b","originalTitle":"C언어로 알아보는 객체 지향 프로그래밍, 가상 함수 테이블(vtable)과 메서드 구현","originalDescription":"\uD83C\uDFAE C언어로 객체 지향 프로그래밍의 핵심 원리를 탐구하며, 구조체와 함수 포인터를 활용해 가상 함수 테이블과 동적 메서드 호출 방식을 게임 개발을 통해 실제적으로 구현하고 설명하는 심도 있는 기술 탐험 가이드입니다.","url":"https://chinensis.tistory.com/entry/C%EC%96%B8%EC%96%B4%EB%A1%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EB%8A%94-%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D","ogTitle":"C언어로 알아보는 객체 지향 프로그래밍: 가상 함수 테이블(vtable)과 메서드 구현","ogDescription":"C언어로 구조체와 함수 포인터를 이용해 객체 지향 프로그래밍을 구현하는 방법을 설명합니다. 객체 지향 언어의 메서드를 모방하고, 가상 함수 테이블(vtable)을 이용한 동적 함수 호출을 구현하는 과정을 다룹니다. C++의 정적/동적 바인딩, Java의 추상 메서드 등 다양한 언어의 메서드/인터페이스 구현 방식과 비교하며 객체 지향의 원리를 설명합니다.개요요전에 제어의 역전(Inversion of Control) 이해하기 1부: 객체 지향 이전의 C언어 구현이라는 글을 썼습니다.2부는 \\"객체 지향 프로그래밍에서의 제어의 역전\\"을 설명할 계획이었는데요.글의 내용을 고민하던 와중, 이걸 객체 지향 언어 대신 C언어로 설명해 볼 순 없을까?라는 생각이 들었습니다.그런데 글을 쓰다 보니 내용이 점점 산으로 가고..","ogImage":"https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FS6xLK%2FbtsKUEcZ0MI%2FERqRcLCUpKKr039BM2VEwk%2Fimg.jpg"},{"round":"4th","category":"Backend","author":"이금주","originalTitle":"카드 발동 제네릭 와일드카드?(feat. 이펙티브 자바)","originalDescription":"\uD83D\uDE80 제네릭의 핵심은 타입 안전성을 높이고 코드 재사용성을 강화하는 자바의 강력한 타입 시스템 기능으로, 컴파일 시점에 타입 검사를 통해 런타임 오류를 사전에 방지하는 중요한 개념입니다.","url":"https://velog.io/@prettylee620/%EC%B9%B4%EB%93%9C-%EB%B0%9C%EB%8F%99-%EC%A0%9C%EB%84%A4%EB%A6%AD-%EC%99%80%EC%9D%BC%EB%93%9C%EC%B9%B4%EB%93%9Cfeat.-%EC%9D%B4%ED%8E%99%ED%8B%B0%EB%B8%8C-%EC%9E%90%EB%B0%94","ogTitle":"카드 발동 제네릭 와일드카드?(feat. 이펙티브 자바)","ogDescription":"이펙티브 자바 스터디를 하고 있는데, 2주전까지의 파트는 제네릭이었음 보통 Controller 짤 때 Map에 때려 넣는 곳이 진짜 많은데 Map이랑 같이 제네릭을 많이 쓰는 것 같음\\n\\n그래서 한 번 공부하면 머리에 남지도 않으니 제네릭에 대한 것 전부 다 정리해보자","ogImage":"https://velog.velcdn.com/images/prettylee620/post/7e4a0766-f55c-41ba-86e8-666becf8897f/image.png"},{"round":"4th","category":"Data","author":"서유진","originalTitle":"3달 간의 SQL스터디를 마무리하며... (부제 모더레이터로써의 스터디 후기)","originalDescription":"\uD83C\uDF1F 3개월간의 SQL 스터디를 통해 동료들과 함께 성장하고, 모더레이터로서 데이터 기반 업무 문화 확산에 기여한 감동적인 학습 여정을 소개합니다.","url":"https://spaceofyujin.tistory.com/42","ogTitle":"3달 간의 SQL스터디를 마무리하며... (부제: 모더레이터로써의 스터디 후기)","ogDescription":"회사 동료들과 2024년 9월 24일 첫 회차를 시작으로, 2024년 11월 12일 마지막 회차까지 마무리하며 약 3달 간의 스터디가 끝났다.워낙 몰랐던 지식을 습득하고 배우는 것을 좋아해서 스터디는 이것저것 다양하게 해왔었는데, 모더레이터(Moderator)로써 내가 스터디를 진행하고 이끌어나가는 경험은 처음이었던지라 많이 떨리면서도 책임감도 크게 느껴지는, 새로운 경험이었다. 이 새로움이 잊혀지기 전에 글로써 남겨보고자 한다.\xa0\xa00. 처음 시작은 서동요였다.\\"유진님. 회사에서 SQL스터디 하신다면서요!\\"\\"아 진짜요? SQL도 따로 스터디하시는구나. 누가 하신대요?\\"\\"어, 유진님이 가르쳐주신다는데요?\\"\\"? ...제가요?\\"\xa0친한 디렉터 동료와 우연히 엘레베이터에서 만나 반갑게 인사를 나눴는데 들은 말이었..","ogImage":"https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbir44d%2FbtsKK9E63BI%2FAz2xPGreJdj8tq6BJPjauk%2Fimg.png"},{"round":"4th","category":"Frontend","author":"황낙준","originalTitle":"왜 Object.keys는 string[] 타입을 리턴하나요?","originalDescription":"\uD83D\uDD0D 타입스크립트의 Object.keys()가 항상 string[]을 반환하는 이유는 런타임 동작을 보존하고, 열린 구조의 타입 시스템을 유지하기 위한 의도적인 설계로, 구조적 타이핑의 유연성을 최대한 반영한 선택입니다.","url":"https://velog.io/@wns450/%EC%99%9C-Object.keys%EB%8A%94-string-%ED%83%80%EC%9E%85%EC%9D%84-%EB%A6%AC%ED%84%B4%ED%95%98%EB%82%98%EC%9A%94","ogTitle":"왜 Object.keys는 string[] 타입을 리턴하나요?","ogDescription":"Object.keys가 string[] 타입을 반환하는 이유에 관해 찾아보았습니다. Github Issue와 공식 문서를 통해 이를 알 수 있었습니다. 이 과정에서 타입스크립트의 디자인 원칙과 타입 안전성에 대해 배울 수 있었습니다.","ogImage":"https://velog.velcdn.com/images/wns450/post/b1de32e2-7f84-4061-9089-ce1318fc617e/image.png"},{"round":"4th","category":"Frontend","author":"이상조","originalTitle":"다형성 컴포넌트 구현에 문제가 있나요?","originalDescription":"\uD83D\uDE80 다형성 컴포넌트로 디자인 시스템의 재사용성과 유연성을 극대화하여, 컴포넌트의 확장성과 타입 안전성을 높이는 혁신적인 React 컴포넌트 구현 방법을 소개합니다!","url":"https://blog.sjoleee.info/posts/polymorphic-components","ogTitle":"다형성 컴포넌트 구현에 문제가 있나요?","ogDescription":"렌더 위임, as prop을 구현하며 겪은 트러블 슈팅 경험","ogImage":"https://blog.sjoleee.info/images/posts/Develop/polymorphic-components/thumbnail.png"},{"round":"4th","category":"Frontend","author":"조성훈","originalTitle":"면접관께서 가로되, 번들러가 무엇이냐 물으니","originalDescription":"\uD83D\uDCDA 웹 개발자의 필수 지식인 번들러의 개념과 역할을 기술 면접 경험을 통해 상세히 설명한 글로, 번들러의 등장 배경부터 실제 활용까지 체계적으로 이해할 수 있어 추천합니다.","url":"https://sungpaks.github.io/what-and-why-and-how-bundler/","ogTitle":"\uD83C\uDF81 면접관께서 가로되, 번들러가 무엇이냐 물으니","ogDescription":"지원자가 횡설수설 대답하매 마침내 모르겠다며 땀 흘리더라 - 면 11:14","ogImage":null},{"round":"4th","category":"Frontend","author":"김채정","originalTitle":"(年間 회고) 신입 개발자 생존기 희노애락 365일","originalDescription":"\uD83C\uDF31 신입 개발자의 솔직하고 감동적인 1년 회고로, 성장의 고민과 희망을 진솔하게 담아낸 성장 스토리를 소개합니다!","url":"https://velog.io/@blcklamb/%E5%B9%B4%E9%96%93-%ED%9A%8C%EA%B3%A0-%EC%8B%A0%EC%9E%85-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EC%83%9D%EC%A1%B4%EA%B8%B0-%ED%9D%AC%EB%85%B8%EC%95%A0%EB%9D%BD-365%EC%9D%BC","ogTitle":"[年間 회고] 신입 개발자 생존기: 희노애락 365일","ogDescription":"다른 분들의 1년차는 어떠셨는지도 궁금하네요.","ogImage":"https://velog.velcdn.com/images/blcklamb/post/23d9b820-4b03-481c-8849-e4359f219725/image.png"},{"round":"4th","category":"Frontend","author":"김민규","originalTitle":"실전 오픈소스를 기여하며 느끼고 배운 것","originalDescription":"\uD83D\uDE80 오픈소스 기여를 통해 기술적 성장, 재미, 그리고 도파민 충전까지! 전 세계 개발자들과 함께 성장하며 라이브러리의 결함들을 개선하는 즐거운 여정을 소개합니다.","url":"https://www.gyumong.info/daily/open-source-contribution-2","ogTitle":"실전 오픈소스를 기여하며 느끼고 배운 것","ogDescription":"오픈소스 기여를 통해 기술적 성장과 협업의 중요성을 배우고, 커뮤니티와 생태계에 기여한 경험을 나눕니다. Toss의 es-toolkit과 typescript-eslint 등 다양한 프로젝트에서 PR을 성공적으로 머지하며 얻은 통찰을 중심으로, 코드 리뷰, 문제 해결 과정, 그리고 오픈소스 기여의 즐거움을 다룹니다.","ogImage":"https://www.gyumong.info/assets/profile.png"},{"round":"4th","category":"Frontend","author":"권보미","originalTitle":"나만의 간판 생성 프로젝트 개발기 (feat. 풀스택 도전기)","originalDescription":"\uD83D\uDCA1 간판 이미지를 활용한 풀스택 프로젝트로, Supabase를 활용해 DB 구축부터 API 개발, 이미지 렌더링까지 직접 구현한 개발 과정을 상세히 다룬 기술 블로그입니다.","url":"https://kwonbomi.xyz/blog/blog3","ogTitle":"Bomi Kwon 권보미","ogDescription":null,"ogImage":null},{"round":"4th","category":"Fullstack","author":"장진호","originalTitle":"TypeScript Namespace Deep Dive","originalDescription":"\uD83E\uDDE9 TypeScript의 namespace는 타입 계층 표현과 편의성을 위해 여전히 유용하며, 특히 타입 전용으로 사용할 때 강력한 도구로 활용할 수 있는 TypeScript의 숨은 기능입니다.","url":"https://www.verycosy.net/posts/2024/11/typescript-namespace-deep-dive","ogTitle":"TypeScript Namespace Deep Dive | VERYCOSY PLACE","ogDescription":"사라지지 않는다면 나름의 이유가 있다","ogImage":"https://verycosy.net/images/thumbnail.jpg"},{"round":"4th","category":"PMPO","author":"김채은","originalTitle":"스타트업의 QA 프로세스 개선 (1) 우리 모두가 QA입니다\uD83D\uDE09","originalDescription":"\uD83D\uDE80 스타트업의 QA 프로세스 개선, 모든 팀원이 품질 보증의 주체가 되어 효율성과 협업을 높이는 혁신적인 접근 방식을 소개합니다!","url":"https://chaerangja.tistory.com/27","ogTitle":"스타트업의 QA 프로세스 개선 (1) : 우리 모두가 QA입니다\uD83D\uDE09","ogDescription":"이번 글에는 스타트업에서 2년 가까이 QA 전반을 담당하면서,\xa0작은 규모의 IT 프로덕트 팀에서 QA는 누가, 어떻게 해야 하는가에 대해 고민하고 프로세스를 개선했던 경험을 담았다.\xa0이 글을 추천드리는 분들다음과 같은 특성의 조직에서 QA\xb7테스트의 R&R을 어떻게 가져가야 할지 고민이신 분- 작은 규모의 프로덕트 팀\xa0 \xa0 - 팀 전체 인원이 20명 미만\xa0 \xa0 - QA에 명시적으로 할당된 인원이 2명 이하- QA 직무가 개발보다 기획 및 UX의 범주로 정의되어 있는 경우\xa0\xa0\xa0\xa0이거 나 혼자 다 못한다!내 커리어의 시작은 QA 인턴이었다. 열한 달 동안 인턴으로 일한 뒤 기획 및 QA(라는 어정쩡한)\xa0직무로 정규직 전환이 되었고, 또 1년 정도 뒤에 PM으로 직무를 확정했으니\xa0거의 2년 가까이 QA 담당자로..","ogImage":"https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fo1GbR%2FbtsKTFcv8dx%2FkSuu0GuTuXIKmhsXKJPkY1%2Fimg.png"}]');function l(t){let e=["th","st","nd","rd"],o=t%100;return t+(e[(o-20)%10]||e[o]||"th")}let c=n.createContext({curation:null,authors:null,metadata:null}),g=t=>{var e,o,n,g;let{회차:h,기수:u=10,직군:E}=t,m=l(h),d=l(u),B=r.A;return(0,i.jsx)(c.Provider,{value:{curation:a,authors:B,metadata:s},children:(0,i.jsx)("div",{className:"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 max-w-7xl mx-auto px-4",children:E?(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("h2",{className:"text-3xl font-bold mb-4 col-span-full",children:E}),null===(n=a[d])||void 0===n?void 0:null===(o=n[m])||void 0===o?void 0:null===(e=o[E])||void 0===e?void 0:e.map(t=>(0,i.jsx)(p,{...t},t.제목))]}):(0,i.jsx)(i.Fragment,{children:Object.entries(null===(g=a[d])||void 0===g?void 0:g[m]).map(t=>{let[e,o]=t;return(0,i.jsxs)("div",{className:"col-span-full",children:[(0,i.jsx)("h2",{className:"text-3xl font-bold mb-4",children:e}),(0,i.jsx)("div",{className:"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6",children:o.map(t=>(0,i.jsx)(p,{...t},t.제목))})]},e)})})})})},p=t=>{var e;let{제목:o,주소:a,작가:r,설명:s}=t,l=n.useContext(c).authors,g=n.useContext(c).metadata,p=null==l?void 0:l[r],h=null==g?void 0:null===(e=g.find(t=>t.originalTitle===o))||void 0===e?void 0:e.ogImage;return(0,i.jsx)("a",{href:a,target:"_blank",rel:"noreferrer",className:"no-underline",children:(0,i.jsxs)("div",{className:"flex flex-col h-full rounded-xl transition-all hover:shadow-sm border border-gray-100 dark:border-gray-900",children:[h?(0,i.jsx)("div",{className:"aspect-[4/3] w-full h-full max-h-[243px]",children:(0,i.jsx)("img",{className:"w-full h-full object-cover rounded-xl m-0",src:h,alt:o,draggable:!1})}):(0,i.jsx)("div",{className:"aspect-[4/3] w-full h-full bg-gray-100 dark:bg-gray-900 rounded-xl p-4 max-h-[243px]",children:(0,i.jsx)("div",{className:"flex justify-center items-center w-full h-full text-gray-500 dark:text-gray-400 text-sm",children:o})}),(0,i.jsxs)("div",{className:"flex flex-col px-4 mt-4 mb-4",children:[(0,i.jsx)("h3",{className:"text-xl font-bold mb-2 mt-2",children:o}),(0,i.jsx)("p",{className:"text-gray-600 text-sm",children:s}),p?(0,i.jsxs)("div",{className:"flex items-center h-8",children:[(0,i.jsx)("img",{className:"w-8 h-8 object-cover overflow-hidden rounded-full border-white",src:p.image_url,alt:p.name}),(0,i.jsx)("span",{className:"text-sm text-gray-500 ml-2",children:(null==p?void 0:p.name)||r})]}):(0,i.jsx)("span",{className:"text-gray-500 text-sm",children:r})]})]})})}},7686:(t,e,o)=>{"use strict";o.d(e,{A:()=>i});let i={정현수:{name:"정현수",title:"Frontend Engineer @ Daangn",url:"https://github.com/junghyeonsu",image_url:"https://github.com/junghyeonsu.png",page:!0,socials:{linkedin:"hyeonsu-jung-5483911a5",github:"junghyeonsu",blog:"https://junghyeonsu.com/"}},변성윤:{name:"변성윤",title:"글또 운영자 / 데이터 과학자 / 코치",url:"https://github.com/zzsza",page:!0,image_url:"https://github.com/zzsza.png"},이용선:{name:"이용선(rio)",title:"글또 운영진 / Backend Engineer",url:"https://github.com/dldydtjs2965",image_url:"https://github.com/dldydtjs2965.png",page:!0,socials:{linkedin:"leeyongseon",github:"dldydtjs2965",blog:"https://codediary21.tistory.com/"}},임지훈:{name:"임지훈",title:"글또 운영진 / Cloud Engineer",url:"https://github.com/heuristicwave",image_url:"https://github.com/heuristicwave.png",page:!0,socials:{linkedin:"heuristicwave",github:"heuristicwave",blog:"https://heuristicwave.github.io/"}},금정민:{name:"금정민",title:"OpenSource Contributor | Frontend Engineer @ GLN, HANA financial group",url:"https://github.com/KumJungMin",image_url:"https://github.com/KumJungMin.png",page:!0,socials:{linkedin:"정민-금-51aa492b9",github:"KumJungMin",blog:"https://mong-blog.tistory.com/"}},곽승예:{name:"곽승예",title:"Data Scientist",url:"https://github.com/seungye-kwak",image_url:"https://github.com/seungye-kwak.png",page:!0,socials:{linkedin:"https://www.linkedin.com/in/seungye-kwak/",github:"seungye-kwak",blog:"https://login-data.tistory.com/"}},김수빈:{name:"김수빈",title:"Software Engineer @ Daangn",url:"https://github.com/sudosubin",image_url:"https://github.com/sudosubin.png",page:!0,socials:{linkedin:"sudosubin",github:"sudosubin",blog:"https://medium.com/@sudosubin"}},이소희a:{name:"이소희",title:"Data Architect @ En-core",url:"https://brunch.co.kr/@hnote",image_url:"http://t1.daumcdn.net/brunch/service/user/9KD2/image/Tct739DmVJSMp5Sv4xCdqCHb9IA.jpg",page:!0,socials:{linkedin:"https://www.linkedin.com/in/soheeee/",blog:"https://wvwv.tistory.com/"}},박경원:{name:"박경원",title:"Frontend Engineer",url:"https://github.com/pkw-May",image_url:"https://github.com/pkw-May.png",page:!0,socials:{linkedin:"kyungwon-park-6315b81b7",github:"pkw-May",blog:"https://pkw-may.tistory.com/"}},서현석:{name:"서현석",title:"Full-Stack Developer @ konantechnology",url:"https://github.com/chucoding",image_url:"https://github.com/chucoding.png",page:!0,socials:{linkedin:"https://linkedin.com/in/chucoding",github:"chucoding",blog:"chucoding.tistory.com"}},이종은:{name:"이종은",title:"Backend Engineer",url:"https://github.com/jongeuni",image_url:"https://github.com/jongeuni.png",page:!0,socials:{linkedin:"종은-이-6a166623b",github:"jongeuni",blog:"https://yatta.tistory.com/"}},최세연:{name:"최세연",title:"Data Engineer",url:"https://github.com/barabobbob",image_url:"https://github.com/barabobbob.png",page:!0,socials:{linkedin:"https://www.linkedin.com/in/%EC%84%B8%EC%97%B0-%EC%B5%9C-471b9823b?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=ios_app",github:"barabobbob",blog:"https://velog.io/@chltpdus48"}},강주혁:{name:"강주혁",title:"Frontend Developer Assistant(UX) @ Viva Republica",url:"https://github.com/kangju2000",image_url:"https://github.com/kangju2000.png",page:!0,socials:{linkedin:"kangju2000",github:"kangju2000",blog:"https://kangju.dev/"}},황진성:{name:"황진성",title:"Software Engineer @Kurly",url:"https://github.com/JinseongHwang",image_url:"https://avatars.githubusercontent.com/u/52629158?v=4",page:!0,socials:{linkedin:"jinseong-hwang",github:"JinseongHwang",blog:"https://jinseong-dev.tistory.com/"}},임지환:{name:"임지환",title:"Product Manager",url:"https://habwa.tistory.com/",image_url:"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png",page:!0,socials:{linkedin:"https://www.linkedin.com/in/%EC%A7%80%ED%99%98-%EC%9E%84-76b69924b/",blog:"https://habwa.tistory.com/"}},이선협:{name:"이선협",title:"CTO @ CoBALT",url:"https://github.com/kciter",image_url:"https://github.com/kciter.png",page:!0,socials:{linkedin:"kciter",github:"kciter",blog:"https://kciter.so"}},조예진:{name:"조예진",title:"Frontend Engineer @ Miridih",url:"https://github.com/ooooorobo",image_url:"https://github.com/ooooorobo.png",page:!0,socials:{linkedin:"yejin-cho-b741a3222",github:"ooooorobo",blog:"https://www.oooooroblog.com/"}},곽희진:{name:"곽희진",title:"Technical Architect",url:"https://github.com/new-h2",image_url:"https://github.com/new-h2.png",page:!0,socials:{linkedin:"https://www.linkedin.com/in/fromondo",github:"new-h2",blog:"https://m.blog.naver.com/from_ondo"}},신지헤:{name:"신지혜",title:"Product Owner",url:"https://brunch.co.kr/@smol",image_url:"https://img1.daumcdn.net/thumb/C500x500/?fname=http://t1.daumcdn.net/brunch/service/user/4nUc/image/ofdjXHDTRU0PABI6o856SDsOtbk.jpg",page:!0,socials:{linkedin:"https://www.linkedin.com/in/anne-jihye-shin-1b4162271/",blog:"https://nomadmango.tistory.com/",blog2:"https://brunch.co.kr/@smol"}},이호동:{name:"이호동",title:"Cloud Engineer",url:"https://github.com/nauco",image_url:"https://github.com/nauco.png",page:!0,socials:{linkedin:"hodong-lee",github:"nauco",blog:"https://nauco.tistory.com/"}},전희선:{name:"전희선",title:"Data Engineer",url:"https://github.com/heehehe",image_url:"https://github.com/heehehe.png",page:!0,socials:{linkedin:"https://www.linkedin.com/in/heeseon-cheon/",blog:"https://heehehe-ds.tistory.com/"}},송경근:{name:"송경근",title:"글또 운영진 / Software Engineer @ 42dot",url:"https://github.com/songkg7",image_url:"https://github.com/songkg7.png",page:!0,socials:{linkedin:"https://www.linkedin.com/in/songkg7/",github:"songkg7",blog:"https://haril.dev"}},정종윤:{name:"정종윤",title:"Front-End Developer",url:"https://github.com/wormwlrm",image_url:"https://github.com/wormwlrm.png",page:!0,socials:{linkedin:"wormwlrm",github:"wormwlrm",blog:"https://wormwlrm.github.io/"}},최현구:{name:"최현구",title:"Backend Engineer",url:"https://hyeon9mak.github.io",image_url:"https://github.com/hyeon9mak.png",page:!0,socials:{linkedin:"hyeon9mak",github:"hyeon9mak",blog:"https://hyeon9mak.github.io"}}}}}]);